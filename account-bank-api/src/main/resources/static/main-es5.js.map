{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account/account.component.ts","webpack:///src/app/account/account.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/broker/broker.service.ts","webpack:///src/app/class/client.ts","webpack:///src/app/client/client-list/client-item/client-item.component.ts","webpack:///src/app/client/client-list/client-item/client-item.component.html","webpack:///src/app/client/client-list/client-list.component.ts","webpack:///src/app/client/client-list/client-list.component.html","webpack:///src/app/client/client.component.ts","webpack:///src/app/client/client.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/operation/operation.component.ts","webpack:///src/app/operation/operation.component.html","webpack:///src/app/print-page/print-page.component.ts","webpack:///src/app/print-page/print-page.component.html","webpack:///src/app/services/authentification.service.ts","webpack:///src/app/services/client.service.ts","webpack:///src/app/services/operation.service.ts","webpack:///src/app/state/state.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountComponent","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","authserv","title","isAuthentication","AppModule","declarations","providers","bootstrap","BrokerService","sourceEventSubject","sourceEventSubjectObservable","asObservable","event","next","providedIn","Client","ClientItemComponent","client","ClientListComponent","DataStateEnum","console","log","clientsInput$","ClientComponent","fb","service","broker","clientIn$","onGetAllClients","publishEvent","type","GET_ALL_CLIENTS","subscribe","actionEvent","onActionEvent","clientForm","group","firstName","required","minLength","maxLength","lastName","emailAdress","email","birtDayDate","phoneNumber","$event","getAllClient","pipe","data","dataState","LOADED","LOADING","err","ERROR","errorMessage","message","invalid","save","value","ADD_CLIENT","window","location","reload","saveData","reloadCurrentPage","FooterComponent","HomeComponent","LoginComponent","authServ","router","isAuth","loginForm","accountNumber","clientId","onLogin","resp","saveToken","body","navigate","MenuComponent","auth","loadInfoClient","deconexion","OperationComponent","displayErrorMessage","typeOperation","opertationForm","amountOperation","description","beneficiary","getAllOperation","getAllOperationClient","operation","forEach","PrintPageComponent","display","cmpName","printContents","document","getElementById","innerHTML","originalContents","print","onprintHistoriqueCompte","AuthentificationService","http","host","post","observe","token","localStorage","setItem","jwtHelper","obJwt","decodeToken","getItem","role","removeItem","ClientService","context_path","get","OperationService","ActionsTypes","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Account</p>","import { PrintPageComponent } from './print-page/print-page.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { OperationComponent } from './operation/operation.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'account', component: AccountComponent },\r\n  { path: 'operation', component: OperationComponent },\r\n  { path: 'client', component: ClientComponent },\r\n  { path: 'printPage', component: PrintPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthentificationService } from './services/authentification.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'bank-account-front';\r\n   \r\n  constructor(private authserv: AuthentificationService) {}\r\n \r\n  isAuth() {\r\n    return this.authserv.isAuthentication();\r\n  }\r\n}\r\n","<app-login *ngIf=\"!isAuth()\"></app-login>\r\n<app-menu *ngIf=\"isAuth()\"></app-menu>\r\n<router-outlet *ngIf=\"isAuth()\"></router-outlet>\r\n<router-outlet name=\"print\"></router-outlet>\r\n<app-footer *ngIf=\"isAuth()\"></app-footer>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { OperationComponent } from './operation/operation.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { ClientListComponent } from './client/client-list/client-list.component';\r\nimport { ClientItemComponent } from './client/client-list/client-item/client-item.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PrintPageComponent } from './print-page/print-page.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MenuComponent,\r\n    AccountComponent,\r\n    OperationComponent,\r\n    ClientComponent,\r\n    ClientListComponent,\r\n    ClientItemComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    PrintPageComponent,\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n   \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ActionEvent } from '../state/state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrokerService {\n\n  sourceEventSubject:Subject<ActionEvent>=new Subject<ActionEvent>();\n  sourceEventSubjectObservable=this.sourceEventSubject.asObservable();\n\n  //sourceEventSubject2:Subject<ActionEvent>=new Subject<ActionEvent>();\n  //sourceEventSubjectObservable2=this.sourceEventSubject.asObservable();\n\n  publishEvent(event:ActionEvent){\n    this.sourceEventSubject.next(event);\n  }\n}\n","export class Client {\r\n    id: number;\r\n    lastName: string;\r\n    firstName: string;\r\n    birtDayDate: string;\r\n    phoneNumber: string;\r\n    emailAdress: string;\r\n    accountNumber: number;\r\n    clientId: number;\r\n    status:boolean;\r\n    role:string;\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Client } from 'src/app/class/client';\n\n@Component({\n  selector: 'app-client-item',\n  templateUrl: './client-item.component.html',\n  styleUrls: ['./client-item.component.css']\n})\nexport class ClientItemComponent implements OnInit {\n\n  @Input() client: Client | null = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onEdit(client: Client) {\n\n  }\n  onSelect(client: Client) {\n\n  }\n}\n","<tr *ngIf=\"client\">\n    <td>{{client.id}}</td>\n    <td>{{client.firstName}}</td>\n    <td>{{client.lastName}}</td>\n    <td>{{client.birtDayDate}}</td>\n    <td>\n      <button (click)=\"onSelect(client)\" [ngClass]=\"client.status?'btn-success':'btn-danger'\" class=\"btn btn-sm\">\n        <span *ngIf=\"client.status\">Anactif</span>\n        <span *ngIf=\"!client.status\">Actif</span>\n      </button>\n    </td>\n    <td>\n      <button class=\"btn btn-danger\" (click)=\"onEdit(client)\">\n        <span class=\"fa fa-edit\">Edit</span>\n      </button>\n    </td>\n  </tr>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppDataState, DataStateEnum } from 'src/app/state/state';\nimport { Client } from 'src/app/class/client';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent implements OnInit {\n  @Input() clientsInput$:Observable<AppDataState<Client[]>>;\n  readonly DataStateEnum=DataStateEnum;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"List \" + this.clientsInput$ );\n  }\n\n}\n","\n    <ng-container *ngIf=\"(clientsInput$ | async) as result\" [ngSwitch]=\"result.dataState\" >\n      <ng-container *ngSwitchCase=\"DataStateEnum.LOADING\">\n        Loading .....\n      </ng-container>\n      <ng-container *ngSwitchCase=\"DataStateEnum.ERROR\">\n        <div class=\"alert-danger\">\n          {{result.errorMessage}}\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"DataStateEnum.LOADED\">\n        <table class=\"table\">\n          <tr>\n            <th>ID</th><th>FirstName</th><th>LastName</th><th>Date Naissance</th><th>Status</th><th>Action</th>\n          </tr>\n          <app-client-item\n            [client]=\"p\"\n            *ngFor=\"let p of result.data\" style=\"display: contents\">\n          </app-client-item>\n        </table>\n      </ng-container>\n    </ng-container>\n\n  ","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validator, Validators } from '@angular/forms';\r\nimport { Client } from '../class/client';\r\nimport { ClientService } from '../services/client.service';\r\nimport { BrokerService } from '../broker/broker.service';\r\nimport { ActionsTypes, AppDataState, DataStateEnum, ActionEvent } from '../state/state';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.css']\r\n})\r\nexport class ClientComponent implements OnInit {\r\n\r\n  public clientForm: FormGroup;\r\n  public client: Client;\r\n  clientIn$:Observable<AppDataState<Client[]>> |null=null;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private service: ClientService, private broker: BrokerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.onGetAllClients();\r\n    this.broker.publishEvent({type: ActionsTypes.GET_ALL_CLIENTS});\r\n    this.broker.sourceEventSubjectObservable.subscribe((actionEvent: ActionEvent) => {\r\n      this.onActionEvent(actionEvent);\r\n    });\r\n\r\n    this.clientForm = this.fb.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\r\n      lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\r\n      emailAdress: ['', [Validators.required, Validators.email]],\r\n      birtDayDate: '',\r\n      phoneNumber: '',\r\n    });\r\n\r\n\r\n  }\r\n  onActionEvent($event: ActionEvent) {\r\n    switch ($event.type) {\r\n      case ActionsTypes.GET_ALL_CLIENTS: this.onGetAllClients();break;\r\n      //case ProductActionsTypes.GET_SELECTED_PRODUCTS: this.onGetSelectedProducts();break;\r\n     // case ProductActionsTypes.GET_AVAILABLE_PRODUCTS: this.onGetAvailableProducts();break;\r\n     // case ProductActionsTypes.SEARCH_PRODUCTS: this.onSearch($event.payload);break;\r\n     // case ProductActionsTypes.NEW_PRODUCT: this.onNewProduct();break;\r\n    //  case ProductActionsTypes.SELECT_PRODUCT: this.onSelect($event.payload);break;\r\n    //  case ProductActionsTypes.DELETE_PRODUCT: this.onDelete($event.payload);break;\r\n     // case ProductActionsTypes.EDIT_PRODUCT: this.onEdit($event.payload);break;\r\n    }\r\n  }\r\n  onGetAllClients() {\r\n    this.clientIn$=this.service.getAllClient().pipe(\r\n      map(data=>{\r\n        console.log(data);\r\n        return ({dataState:DataStateEnum.LOADED,data:data})\r\n      }),\r\n      startWith({dataState:DataStateEnum.LOADING}),\r\n      catchError(err=>of({dataState:DataStateEnum.ERROR, errorMessage:err.message}))\r\n    );\r\n  }\r\n\r\n  public saveData() {\r\n    //this.submitted=true;\r\n    if (this.clientForm?.invalid) return;\r\n    this.service.save(this.clientForm?.value)\r\n      .subscribe(data => {\r\n        this.onGetAllClients;\r\n        this.broker.publishEvent({ type: ActionsTypes.ADD_CLIENT });\r\n      });\r\n      this.onGetAllClients;\r\n    //this.clientForm.clearValidators;\r\n    //this.clientForm.updateValueAndValidity;\r\n  }\r\n\r\n  reloadCurrentPage() {\r\n    window.location.reload();\r\n   }\r\n}\r\n\r\n\r\n","<div class=\"container\">\r\n  <div class=\"row mt-4 mb-4\">\r\n    <h1 style=\"text-align: center;\">CLIENT</h1>\r\n  </div>\r\n    <div class=\"col\">\r\n        <div class=\"col-4 col-md-5 mb-3 mt-3\">\r\n            <form novalidate (ngSubmit)=\"saveData()\" [formGroup]=\"clientForm\">\r\n\r\n                <div class=\"form-group\">\r\n                    <input placeholder=\"Prénom *\" type=\"text\" class=\"form-control\" id=\"firstname\"\r\n                        formControlName=\"firstName\" [ngClass]=\"{'is-invalid': clientForm.get('firstName').touched &&!clientForm.get('firstName').valid}\">\r\n\r\n                    <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"clientForm.get('firstName').errors?.required\">\r\n                            Entrez votre nom\r\n                        </span>\r\n                        <span *ngIf=\"clientForm.get('firstName').errors?.maxlength\">\r\n                            Maxnimum 10 charactères\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Nom * \" class=\"form-control\" id=\"lastname\" formControlName=\"lastName\"\r\n                        [ngClass]=\"{'is-invalid': clientForm.get('lastName').touched && !clientForm.get('lastName').valid }\">\r\n\r\n                    <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"clientForm.get('lastName').errors?.required\">\r\n                            Entrez votre nom\r\n                        </span>\r\n                        <span *ngIf=\"clientForm.get('lastName').errors?.minlength\">\r\n                            Minimum 2 charactères\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Email *\" class=\"form-control\" id=\"email\"\r\n                        formControlName=\"emailAdress\" [ngClass]=\"{'is-invalid': clientForm.get('emailAdress').touched && !clientForm.get('emailAdress').valid}\">\r\n\r\n                    <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"clientForm.get('emailAdress').errors?.required\">\r\n                            Entrez  l'e-mail du client\r\n                        </span>\r\n                        <span *ngIf=\"clientForm.get('emailAdress').errors?.email\">\r\n                            L'e-mail client n'est pas valide\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Téléphone *\" class=\"form-control\" id=\"email\"\r\n                        formControlName=\"phoneNumber\" [ngClass]=\"{'is-invalid': clientForm.get('phoneNumber').touched && !clientForm.get('phoneNumber').valid}\">\r\n                    <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"clientForm.get('phoneNumber').errors?.required\">\r\n                            Veuillez entrer le numéro de télephone du client.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"date\" placeholder=\"Date Naissance\" class=\"form-control\" id=\"date\"\r\n                        formControlName=\"birtDayDate\">\r\n                </div>\r\n\r\n\r\n                <button type=\"submit\" class=\"btn btn-red\" (click)=\"reloadCurrentPage()\" >Enregistrer</button>\r\n            </form>\r\n\r\n\r\n        </div>\r\n        <div class=\"col-12 col-md-12\">\r\n            <app-client-list [clientsInput$]=\"clientIn$\"></app-client-list>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n      <div class=\"footer\">\n        <div class=\"container\">\n          <div class=\"row\">\n          </div>\n        </div>\n      </div>\n      <footer class=\"footer\">\n        <div class=\"container\">\n          <div class=\"row align-items-center flex-row-reverse\">\n            <div class=\"col-auto ml-lg-auto\">\n              <div class=\"row align-items-center\">\n                <div class=\"col-auto\">\n                  <ul class=\"list-inline list-inline-dots mb-0\">\n                    <li class=\"list-inline-item\"><a href=\"#\">Documentation</a></li>\n                    <li class=\"list-inline-item\"><a href=\"#\">FAQ</a></li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-12 col-lg-auto mt-3 mt-lg-0 text-center\">\n              Copyright © 2021 <a href=\"..\"> Bank Account</a> <a href=\"#\" target=\"_blank\"></a> All rights reserved.\n            </div>\n          </div>\n        </div>\n      </footer>\n","\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n /// public isAuth:boolean=true;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    //this.isAuth=false;\r\n  }\r\n\r\n}\r\n","import { BrokerService } from './../broker/broker.service';\r\nimport { ClientService } from './../services/client.service';\r\nimport { Client } from './../class/client';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthentificationService } from '../services/authentification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm: FormGroup;\r\n  public isAuth:boolean= true;\r\n\r\n\r\n\r\n  constructor(private authServ: AuthentificationService, private router: Router,private fb: FormBuilder, private service: ClientService, private broker: BrokerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      accountNumber: ['', [Validators.required,  Validators.maxLength(10)]],\r\n      clientId: ['', [Validators.required, Validators.maxLength(10)]],\r\n    });\r\n  }\r\n\r\n  onLogin() {\r\n    if(this.loginForm?.invalid) return;\r\n    this.authServ.onLogin(this.loginForm?.value).subscribe(resp => {\r\n        this.authServ.saveToken(resp.body);\r\n        this.isAuth=false;\r\n        this.router.navigate([\"/operation\"]);\r\n  }, err => {\r\n    console.log( ' AuthentificationService KO');\r\n  });\r\n}\r\n}\r\n","<body class=\"\" *ngIf=\"isAuth\">\r\n    <div class=\"page\">\r\n        <div class=\"page-single\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n\r\n                    <div class=\"col col-login mx-auto\">\r\n\r\n                        <div class=\"text-center \">\r\n                            <img src=\"assets/logo/sg.jpg\"  alt=\"SG\">\r\n                        </div>\r\n\r\n                        <form  (ngSubmit)=\"onLogin()\" [formGroup]=\"loginForm\">\r\n\r\n                            <div class=\"card-body p-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Account Number</label>\r\n                                    <input name=\"accountNumber\" type=\"text\" class=\"form-control\" id=\"accountNumber\"\r\n                                    autocomplete=\"false\" placeholder=\"Account Numbe\" formControlName=\"accountNumber\"\r\n                                    [ngClass]=\"{'is-invalid':loginForm.get('accountNumber').touched && !loginForm.get('accountNumber').valid}\">\r\n                                    <div class=\"invalid-feedback\">\r\n                                      <span *ngIf=\"loginForm.get('accountNumber').errors?.required\">\r\n                                          Entrez votre numéro de compte\r\n                                      </span>\r\n                                      <span *ngIf=\"loginForm.get('accountNumber').errors?.maxlength\">\r\n                                          Maxnimum 10 charactères\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\"> Client ID </label>\r\n                                    <input name=\"clientId\" type=\"password\" class=\"form-control\" id=\"clientId\" autocomplete=\"false\"\r\n                                    placeholder=\"Client ID\" formControlName=\"clientId\"\r\n                                    [ngClass]=\"{'is-invalid':loginForm.get('clientId').touched && !loginForm.get('clientId').valid}\">\r\n\r\n                                    <div class=\"invalid-feedback\">\r\n                                      <span *ngIf=\"loginForm.get('clientId').errors?.required\">\r\n                                          Entrez votre Id client\r\n                                      </span>\r\n                                      <span *ngIf=\"loginForm.get('clientId').errors?.maxlength\">\r\n                                          Maxnimum 10 charactères\r\n                                      </span>\r\n                                  </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form-footer\">\r\n                                    <button type=\"submit\" class=\"btn btn-red btn-block\">Sign in</button>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </form>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n","import { AuthentificationService } from './../services/authentification.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Client } from '../class/client';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  public client: Client;\r\n\r\n  constructor(private auth:AuthentificationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.client=this.auth.loadInfoClient();\r\n  }\r\n\r\n  public deconexion(){\r\n    this.auth.deconexion();\r\n  }\r\n\r\n}\r\n","<div class=\"header py-4\">\r\n  <div class=\"container\">\r\n    <div class=\"d-flex\">\r\n      <a class=\"header-brand\" routerLink=\"/account\">\r\n        <img src=\"assets/logo/sg.jpg\" alt=\"SG\">\r\n      </a>\r\n      <div class=\"d-flex order-lg-2 ml-auto\">\r\n        <div class=\"dropdown\">\r\n          <a href=\"#\" class=\"nav-link pr-0 leading-none\" data-toggle=\"dropdown\">\r\n            <span class=\"ml-2 d-none d-lg-block\">\r\n              <span class=\"text-default\" style=\"color: black; font-weight: bold;\"> {{client.firstName}} | {{client.lastName}}</span>\r\n              <small class=\"text-muted d-block mt-1\">Account Number : {{client.accountNumber}}</small>\r\n              <small  style=\"color: red; font-size: 14px;\">Balance: 10 € </small>\r\n            </span>\r\n          </a>\r\n          <a href=\"#\" (click)=\"deconexion()\" title=\"Deconexion\" >\r\n            <img src=\"assets/images/logout/gnome_session_logout.png\"  alt=\"Deconexion\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"header collapse d-lg-flex p-0\" id=\"headerMenuCollapse\">\r\n  <div class=\"container\">\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-lg-3 ml-auto\">\r\n        <form class=\"input-icon my-3 my-lg-0\">\r\n          <input type=\"search\" class=\"form-control header-search\" placeholder=\"Search&hellip;\" tabindex=\"1\">\r\n          <div class=\"input-icon-addon\">\r\n            <i class=\"fe fe-search\"></i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-lg order-lg-first\">\r\n        <ul class=\"nav nav-tabs border-0 flex-column flex-lg-row\">\r\n          <li class=\"nav-item\">\r\n            <a routerLink='/account' class=\"nav-link\" style=\"color: red;\"><i class=\"fe fe-home\"></i> Home</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/operation' data-toggle=\"dropdown\">\r\n              <i class=\"fe fe-box\"></i> Opérations\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/client'>\r\n              <i class=\"fe fe-box\"></i> Clients\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/client'>\r\n              <i class=\"fe fe-box\"></i> Beneficiare\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/account'>\r\n              <i class=\"fe fe-box\"></i> Account\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Client } from 'src/app/class/client';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { OperationService } from './../services/operation.service';\r\nimport { AuthentificationService } from './../services/authentification.service';\r\nimport { Expression } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BrokerService } from '../broker/broker.service';\r\nimport { ActionsTypes } from '../state/state';\r\nimport { Operation } from '../class/operation';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-operation',\r\n  templateUrl: './operation.component.html',\r\n  styleUrls: ['./operation.component.css']\r\n})\r\nexport class OperationComponent implements OnInit {\r\n  public opertationForm: FormGroup;\r\n  public client: Client;\r\n  public operation:any;\r\n  displayErrorMessage: boolean = false;\r\n  typeOperation: string=\"CREDIT\";\r\n\r\n  constructor(private fb: FormBuilder, private auth: AuthentificationService,\r\n    private service: OperationService, private broker: BrokerService,private router:Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.opertationForm = this.fb.group({\r\n      type: ['', [Validators.required]],\r\n      amountOperation: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(10)]],\r\n      accountNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n      description:['', [Validators.required, Validators.maxLength(40)]],\r\n      beneficiary: '',\r\n    });\r\n    this.getAllOperation();\r\n  }\r\n\r\n\r\n\r\n  public saveData() {\r\n    if (this.opertationForm?.invalid) return;\r\n    this.service.save(this.opertationForm?.value)\r\n      .subscribe(data => {\r\n        this.broker.publishEvent({ type: ActionsTypes.ADD_CLIENT });\r\n      },err => {\r\n        console.log('hello' + err.code);\r\n        console.log( ' AuthentificationService KO   ' + err.message);\r\n      })\r\n  }\r\n\r\n\r\n  public getAllOperation(){\r\n    this.service.getAllOperationClient().subscribe(data => {\r\n       this.operation = data;\r\n        this.broker.publishEvent({ type: ActionsTypes.GET_ALL_CLIENTS});\r\n        data.forEach(console.log)\r\n      },err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  reloadCurrentPage() {\r\n    window.location.reload();\r\n   }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row mt-4 mb-4\">\r\n    <h1 style=\"text-align: center;\">OPERATIONS</h1>\r\n  </div>\r\n  <div class=\"col\">\r\n    <div class=\"col-sm-5\">\r\n      <form (ngSubmit)=\"saveData()\" [formGroup]=\"opertationForm\">\r\n        <div class=\"form-group\">\r\n          <div class=\"form-label\">Type Opération</div>\r\n          <div class=\"custom-switches-stacked\">\r\n            <label class=\"custom-switch\">\r\n              <input type=\"radio\" name=\"type\" value=\"CREDIT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\r\n                class=\"custom-switch-input\" checked>\r\n              <span class=\"custom-switch-indicator\"></span>\r\n              <span class=\"custom-switch-description\">Dépot</span>\r\n            </label>\r\n            <label class=\"custom-switch\">\r\n              <input type=\"radio\" name=\"type\" value=\"DEBIT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\r\n                class=\"custom-switch-input\">\r\n              <span class=\"custom-switch-indicator\"></span>\r\n              <span class=\"custom-switch-description\">Retrait</span>\r\n            </label>\r\n            <label class=\"custom-switch\">\r\n              <input type=\"radio\" name=\"type\" value=\"TRANSFERT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\r\n                class=\"custom-switch-input\">\r\n              <span class=\"custom-switch-indicator\"></span>\r\n              <span class=\"custom-switch-description\">Virement</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"amountOperation\">Montant:</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"amountOperation\" name=\"amountOperation\"\r\n            formControlName=\"amountOperation\"\r\n            [ngClass]=\"{'is-invalid':opertationForm.get('amountOperation').touched && !opertationForm.get('amountOperation').valid}\">\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"opertationForm.get('amountOperation').errors?.required\">\r\n              Entrez le montant\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"accountNumber\">Numéro Compte à Débiter:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"pwd\" name=\"aaccountNumber\" formControlName=\"accountNumber\"\r\n            [ngClass]=\"{'is-invalid':opertationForm.get('accountNumber').touched && !opertationForm.get('accountNumber').valid}\">\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"opertationForm.get('accountNumber').errors?.required\">\r\n              Entrez votre numéro de compte\r\n            </span>\r\n            <span *ngIf=\"opertationForm.get('accountNumber').errors?.maxlength\">\r\n              Maxnimum 10 charactères\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"typeOperation=='TRANSFERT'\">\r\n          <label for=\"account-cred\">Numéro Compte à Créditer:</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"pwd\" name=\"account-cred\" formControlName=\"beneficiary\">\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <label for=\"description\">Description</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"description\" name=\"description\" formControlName=\"description\"\r\n            [ngClass]=\"{'is-invalid':opertationForm.get('description').touched && !opertationForm.get('description').valid}\">\r\n\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"opertationForm.get('description').errors?.required\">\r\n              Entrez une description de l'opération\r\n            </span>\r\n            <span *ngIf=\"opertationForm.get('description').errors?.maxlength\">\r\n              Maxnimum 40 charactères\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <br>\r\n        <button type=\"submit\" class=\"btn btn-red\"  (click)=\"reloadCurrentPage()\" >Valider</button>\r\n        <button type=\"submit\" class=\"btn btn-red ml-2\">\r\n          <a routerLink=\"/printPage\" style=\"color: white;text-decoration: none;\"> Print </a>\r\n        </button>\r\n      </form>\r\n    </div>\r\n    <div>\r\n      <span style=\"text-align: center; margin-top: 2%; margin-bottom: 2%;\">\r\n        <h6>Liste Opérations</h6>\r\n      </span>\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Opération</th>\r\n            <th>Crédit</th>\r\n            <th>Débit</th>\r\n            <th>Balance</th>\r\n            <th>Date</th>\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let op of operation\">\r\n            <td>\r\n              {{op.description}}\r\n            </td>\r\n            <td style=\"color:green; font-weight: bold;\">\r\n              {{op.creditAmount}}\r\n            </td>\r\n            <td style=\"color: red; font-weight: bold;\">\r\n              - {{op.debitAmount}}\r\n            </td>\r\n            <td>\r\n              {{op.balance}}\r\n            </td>\r\n            <td>\r\n              {{op.dateOperation}}\r\n            </td>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","\r\nimport { OperationService } from './../services/operation.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-print-page',\r\n  templateUrl: './print-page.component.html',\r\n  styleUrls: ['./print-page.component.css'],\r\n})\r\nexport class PrintPageComponent implements OnInit {\r\n  constructor(private service: OperationService) {}\r\n  public operation: any;\r\n  public display:boolean=false;\r\n\r\n  ngOnInit(): void {\r\n    this.getAllOperation();\r\n  }\r\n\r\n  public getAllOperation() {\r\n    this.service.getAllOperationClient().subscribe(\r\n      (data) => {\r\n        this.operation = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n\r\n  onprintHistoriqueCompte(cmpName) {\r\n    this.display=false\r\n    let printContents = document.getElementById(cmpName).innerHTML;\r\n    let originalContents = document.body.innerHTML;\r\n    document.body.innerHTML = printContents;\r\n    window.print();\r\n    document.body.innerHTML = originalContents;\r\n}\r\n}\r\n","<div class=\"row mb-4 mt-4\" >\r\n  <div class=\"col-6\">\r\n    <button type=\"submit\" class=\"btn btn-red mb-4\">\r\n      <a routerLink=\"/operation\" style=\"color: white;text-decoration: none;\"> Nouvelle Opération</a>\r\n    </button>\r\n    <button type=\"submit\" class=\"btn btn-red ml-2 mb-4\" (click)=\"onprintHistoriqueCompte('historique')\">\r\n      Print\r\n    </button>\r\n  </div>\r\n</div>\r\n<div class=\"container\" id=\"historique\">\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <p class=\"h3\">SOCIETE GENERALE</p>\r\n      <address>\r\n        Street Address:<br>\r\n        State, City:<br>\r\n        Region, Postal Code:<br>\r\n        ltd@sg.com\r\n      </address>\r\n    </div>\r\n    <div class=\"col-6 text-end\">\r\n      <p class=\"h3\">Client</p>\r\n      <address>\r\n        Name<br>\r\n        Account Number <br>\r\n        Street Address<br>\r\n        State, City<br>\r\n        Region, Postal Code<br>\r\n        ctr@example.com\r\n      </address>\r\n    </div>\r\n  </div>\r\n  <div style=\"text-align: center;\">\r\n\r\n    <h3>HISTORIQUE COMPTE</h3>\r\n\r\n  </div>\r\n  <br />\r\n  <form>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>N°</th>\r\n          <th>Crédit</th>\r\n          <th>Débit</th>\r\n          <th>Balance</th>\r\n          <th>Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let op of operation\">\r\n          <td>\r\n            {{op.idOperation}}\r\n          </td>\r\n          <td style=\"color:green; font-weight: bold;\">\r\n            {{op.creditAmount}}\r\n          </td>\r\n          <td style=\"color: red; font-weight: bold;\">\r\n            - {{op.debitAmount}}\r\n          </td>\r\n          <td>\r\n            {{op.balance}}\r\n          </td>\r\n          <td>\r\n            {{op.dateOperation}}\r\n          </td>\r\n      </tbody>\r\n    </table>\r\n  </form>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Client } from '../class/client';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthentificationService {\r\n\r\n jwt: string;\r\n client: Client;\r\n host:string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.host = environment.auth;\r\n  }\r\n\r\n\r\n  onLogin(data) {\r\n   return this.http.post(this.host, data, { observe: 'response' });\r\n  }\r\n\r\n  saveToken(token: any) {\r\n    localStorage .setItem('token', token);\r\n  }\r\n\r\n\r\n   loadInfoClient(): Client {\r\n    const jwtHelper = new JwtHelperService();\r\n    this.client = new Client;\r\n     // decode JWT\r\n    const obJwt = jwtHelper.decodeToken(localStorage.getItem('token'));\r\n\r\n    this.client.id = obJwt.id;\r\n    this.client.accountNumber = obJwt.accountNumber;\r\n    this.client.firstName = obJwt.firstName;\r\n    this.client.lastName = obJwt.lastName;\r\n    this.client.phoneNumber = obJwt.phoneNumber;\r\n    this.client.clientId = obJwt.clientId;\r\n    this.client.emailAdress = obJwt.emailAdress;\r\n    this.client.birtDayDate = obJwt.birtDayDate;\r\n    this.client.clientId = obJwt.clientId;\r\n    this.client.role = obJwt.role;\r\n\r\n    return this.client;\r\n  }\r\n\r\n  isAuthentication() {\r\n    if (localStorage.getItem('token') != null) {\r\n      return true;\r\n    }\r\n    return false ;\r\n  }\r\n\r\n  deconexion() {\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from '../class/client';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  host: string;\n  context_path: string;\n  constructor(private http: HttpClient) {\n    this.host = environment.host;\n    this.context_path = environment.context_path;\n  }\n\n\n  getAllClient(): Observable<Client[]> {\n    return this.http.get<Client[]>(this.host + this.context_path + \"/client/all\");\n  }\n  save(client: Client): Observable<Client> {\n    return this.http.post<Client>(this.host + this.context_path + \"/client\", client);\n  }\n  getClient(id: number): Observable<Client> {\n    return this.http.get<Client>(this.host + this.context_path + \"/client/\" + id);\n  }\n\n}\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Operation } from '../class/operation';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OperationService {\r\n\r\n  host: string;\r\n  context_path: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.host = environment.host;\r\n    this.context_path = environment.context_path;\r\n  }\r\n\r\n  getAllOperationClient(): Observable<Operation[]> {\r\n    return this.http.get<Operation[]>(this.host + this.context_path + \"/operation\");\r\n  }\r\n  save(operation: Operation): Observable<Operation> {\r\n    return this.http.post<Operation>(this.host + this.context_path + \"/operation\", operation);\r\n  }\r\n  getOperation(id: number): Observable<Operation> {\r\n    return this.http.get<Operation>(this.host + this.context_path + \"/operation/\" + id);\r\n  }\r\n}\r\n","\nexport enum ActionsTypes{\n    GET_ALL_CLIENTS=\"[Client] Get All clients\",\n    GET_SELECTED_CLIENT=\"[Client] Get Selected client\",\n    NEW_CLIENT=\"[Client] New client\",\n    ADD_CLIENT=\"[Client] New client\",\n  }\n  \n  export interface ActionEvent {\n    type:ActionsTypes,\n    payload?:any\n  }\n  export enum DataStateEnum {\n    LOADING,\n    LOADED,\n    ERROR\n  }\n  \n  export interface AppDataState<T> {\n    dataState:DataStateEnum,\n    data?:T,\n    errorMessage?:string\n  }","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  host:\"http://localhost:8080\",\r\n  auth:\"http://localhost:8080/login\",\r\n  context_path:\"/api/v1\",\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}