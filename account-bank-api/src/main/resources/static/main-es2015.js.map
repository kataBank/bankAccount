{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/broker/broker.service.ts","./src/app/class/client.ts","./src/app/client/client-list/client-item/client-item.component.ts","./src/app/client/client-list/client-item/client-item.component.html","./src/app/client/client-list/client-list.component.ts","./src/app/client/client-list/client-list.component.html","./src/app/client/client.component.ts","./src/app/client/client.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/operation/operation.component.ts","./src/app/operation/operation.component.html","./src/app/print-page/print-page.component.ts","./src/app/print-page/print-page.component.html","./src/app/services/authentification.service.ts","./src/app/services/client.service.ts","./src/app/services/operation.service.ts","./src/app/state/state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Account</p>","import { PrintPageComponent } from './print-page/print-page.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { OperationComponent } from './operation/operation.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'account', component: AccountComponent },\r\n  { path: 'operation', component: OperationComponent },\r\n  { path: 'client', component: ClientComponent },\r\n  { path: 'printPage', component: PrintPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthentificationService } from './services/authentification.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'bank-account-front';\r\n   \r\n  constructor(private authserv: AuthentificationService) {}\r\n \r\n  isAuth() {\r\n    return this.authserv.isAuthentication();\r\n  }\r\n}\r\n","<app-login *ngIf=\"!isAuth()\"></app-login>\r\n<app-menu *ngIf=\"isAuth()\"></app-menu>\r\n<router-outlet *ngIf=\"isAuth()\"></router-outlet>\r\n<router-outlet name=\"print\"></router-outlet>\r\n<app-footer *ngIf=\"isAuth()\"></app-footer>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { OperationComponent } from './operation/operation.component';\r\nimport { ClientComponent } from './client/client.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { ClientListComponent } from './client/client-list/client-list.component';\r\nimport { ClientItemComponent } from './client/client-list/client-item/client-item.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PrintPageComponent } from './print-page/print-page.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MenuComponent,\r\n    AccountComponent,\r\n    OperationComponent,\r\n    ClientComponent,\r\n    ClientListComponent,\r\n    ClientItemComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    PrintPageComponent,\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n   \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ActionEvent } from '../state/state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrokerService {\n\n  sourceEventSubject:Subject<ActionEvent>=new Subject<ActionEvent>();\n  sourceEventSubjectObservable=this.sourceEventSubject.asObservable();\n\n  //sourceEventSubject2:Subject<ActionEvent>=new Subject<ActionEvent>();\n  //sourceEventSubjectObservable2=this.sourceEventSubject.asObservable();\n\n  publishEvent(event:ActionEvent){\n    this.sourceEventSubject.next(event);\n  }\n}\n","export class Client {\r\n    id: number;\r\n    lastName: string;\r\n    firstName: string;\r\n    birtDayDate: string;\r\n    phoneNumber: string;\r\n    emailAdress: string;\r\n    accountNumber: number;\r\n    clientId: number;\r\n    status:boolean;\r\n    role:string;\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Client } from 'src/app/class/client';\n\n@Component({\n  selector: 'app-client-item',\n  templateUrl: './client-item.component.html',\n  styleUrls: ['./client-item.component.css']\n})\nexport class ClientItemComponent implements OnInit {\n\n  @Input() client: Client | null = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onEdit(client: Client) {\n\n  }\n  onSelect(client: Client) {\n\n  }\n}\n","<tr *ngIf=\"client\">\n    <td>{{client.id}}</td>\n    <td>{{client.firstName}}</td>\n    <td>{{client.lastName}}</td>\n    <td>{{client.birtDayDate}}</td>\n    <td>\n      <button (click)=\"onSelect(client)\" [ngClass]=\"client.status?'btn-success':'btn-danger'\" class=\"btn btn-sm\">\n        <span *ngIf=\"client.status\">Anactif</span>\n        <span *ngIf=\"!client.status\">Actif</span>\n      </button>\n    </td>\n    <td>\n      <button class=\"btn btn-danger\" (click)=\"onEdit(client)\">\n        <span class=\"fa fa-edit\">Edit</span>\n      </button>\n    </td>\n  </tr>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppDataState, DataStateEnum } from 'src/app/state/state';\nimport { Client } from 'src/app/class/client';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent implements OnInit {\n  @Input() clientsInput$:Observable<AppDataState<Client[]>>;\n  readonly DataStateEnum=DataStateEnum;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"List \" + this.clientsInput$ );\n  }\n\n}\n","\n    <ng-container *ngIf=\"(clientsInput$ | async) as result\" [ngSwitch]=\"result.dataState\" >\n      <ng-container *ngSwitchCase=\"DataStateEnum.LOADING\">\n        Loading .....\n      </ng-container>\n      <ng-container *ngSwitchCase=\"DataStateEnum.ERROR\">\n        <div class=\"alert-danger\">\n          {{result.errorMessage}}\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"DataStateEnum.LOADED\">\n        <table class=\"table\">\n          <tr>\n            <th>ID</th><th>FirstName</th><th>LastName</th><th>Date Naissance</th><th>Status</th><th>Action</th>\n          </tr>\n          <app-client-item\n            [client]=\"p\"\n            *ngFor=\"let p of result.data\" style=\"display: contents\">\n          </app-client-item>\n        </table>\n      </ng-container>\n    </ng-container>\n\n  ","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validator, Validators } from '@angular/forms';\r\nimport { Client } from '../class/client';\r\nimport { ClientService } from '../services/client.service';\r\nimport { BrokerService } from '../broker/broker.service';\r\nimport { ActionsTypes, AppDataState, DataStateEnum, ActionEvent } from '../state/state';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.css']\r\n})\r\nexport class ClientComponent implements OnInit {\r\n\r\n  public clientForm: FormGroup;\r\n  public client: Client;\r\n  clientIn$:Observable<AppDataState<Client[]>> |null=null;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private service: ClientService, private broker: BrokerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.onGetAllClients();\r\n    this.broker.publishEvent({type: ActionsTypes.GET_ALL_CLIENTS});\r\n    this.broker.sourceEventSubjectObservable.subscribe((actionEvent: ActionEvent) => {\r\n      this.onActionEvent(actionEvent);\r\n    });\r\n\r\n    this.clientForm = this.fb.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\r\n      lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\r\n      emailAdress: ['', [Validators.required, Validators.email]],\r\n      birtDayDate: '',\r\n      phoneNumber: '',\r\n    });\r\n\r\n\r\n  }\r\n  onActionEvent($event: ActionEvent) {\r\n    switch ($event.type) {\r\n      case ActionsTypes.GET_ALL_CLIENTS: this.onGetAllClients();break;\r\n      //case ProductActionsTypes.GET_SELECTED_PRODUCTS: this.onGetSelectedProducts();break;\r\n     // case ProductActionsTypes.GET_AVAILABLE_PRODUCTS: this.onGetAvailableProducts();break;\r\n     // case ProductActionsTypes.SEARCH_PRODUCTS: this.onSearch($event.payload);break;\r\n     // case ProductActionsTypes.NEW_PRODUCT: this.onNewProduct();break;\r\n    //  case ProductActionsTypes.SELECT_PRODUCT: this.onSelect($event.payload);break;\r\n    //  case ProductActionsTypes.DELETE_PRODUCT: this.onDelete($event.payload);break;\r\n     // case ProductActionsTypes.EDIT_PRODUCT: this.onEdit($event.payload);break;\r\n    }\r\n  }\r\n  onGetAllClients() {\r\n    this.clientIn$=this.service.getAllClient().pipe(\r\n      map(data=>{\r\n        console.log(data);\r\n        return ({dataState:DataStateEnum.LOADED,data:data})\r\n      }),\r\n      startWith({dataState:DataStateEnum.LOADING}),\r\n      catchError(err=>of({dataState:DataStateEnum.ERROR, errorMessage:err.message}))\r\n    );\r\n  }\r\n\r\n  public saveData() {\r\n    //this.submitted=true;\r\n    if (this.clientForm?.invalid) return;\r\n    this.service.save(this.clientForm?.value)\r\n      .subscribe(data => {\r\n        this.onGetAllClients;\r\n        this.broker.publishEvent({ type: ActionsTypes.ADD_CLIENT });\r\n      });\r\n      this.onGetAllClients;\r\n    //this.clientForm.clearValidators;\r\n    //this.clientForm.updateValueAndValidity;\r\n  }\r\n\r\n  reloadCurrentPage() {\r\n    window.location.reload();\r\n   }\r\n}\r\n\r\n\r\n","<div class=\"container\">\r\n  <div class=\"row mt-4 mb-4\">\r\n    <h1 style=\"text-align: center;\">CLIENT</h1>\r\n  </div>\r\n    <div class=\"col\">\r\n        <div class=\"col-4 col-md-5 mb-3 mt-3\">\r\n            <form novalidate (ngSubmit)=\"saveData()\" [formGroup]=\"clientForm\">\r\n\r\n                <div class=\"form-group\">\r\n                    <input placeholder=\"Prénom *\" type=\"text\" class=\"form-control\" id=\"firstname\"\r\n                        formControlName=\"firstName\" [ngClass]=\"{'is-invalid': clientForm.get('firstName').touched &&!clientForm.get('firstName').valid}\">\r\n\r\n                    <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"clientForm.get('firstName').errors?.required\">\r\n                            Entrez votre nom\r\n                        </span>\r\n                        <span *ngIf=\"clientForm.get('firstName').errors?.maxlength\">\r\n                            Maxnimum 10 charactères\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Nom * \" class=\"form-control\" id=\"lastname\" formControlName=\"lastName\"\r\n                        [ngClass]=\"{'is-invalid': clientForm.get('lastName').touched && !clientForm.get('lastName').valid }\">\r\n\r\n                    <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"clientForm.get('lastName').errors?.required\">\r\n                            Entrez votre nom\r\n                        </span>\r\n                        <span *ngIf=\"clientForm.get('lastName').errors?.minlength\">\r\n                            Minimum 2 charactères\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Email *\" class=\"form-control\" id=\"email\"\r\n                        formControlName=\"emailAdress\" [ngClass]=\"{'is-invalid': clientForm.get('emailAdress').touched && !clientForm.get('emailAdress').valid}\">\r\n\r\n                    <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"clientForm.get('emailAdress').errors?.required\">\r\n                            Entrez  l'e-mail du client\r\n                        </span>\r\n                        <span *ngIf=\"clientForm.get('emailAdress').errors?.email\">\r\n                            L'e-mail client n'est pas valide\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Téléphone *\" class=\"form-control\" id=\"email\"\r\n                        formControlName=\"phoneNumber\" [ngClass]=\"{'is-invalid': clientForm.get('phoneNumber').touched && !clientForm.get('phoneNumber').valid}\">\r\n                    <div class=\"invalid-feedback\">\r\n                        <span *ngIf=\"clientForm.get('phoneNumber').errors?.required\">\r\n                            Veuillez entrer le numéro de télephone du client.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"date\" placeholder=\"Date Naissance\" class=\"form-control\" id=\"date\"\r\n                        formControlName=\"birtDayDate\">\r\n                </div>\r\n\r\n\r\n                <button type=\"submit\" class=\"btn btn-red\" (click)=\"reloadCurrentPage()\" >Enregistrer</button>\r\n            </form>\r\n\r\n\r\n        </div>\r\n        <div class=\"col-12 col-md-12\">\r\n            <app-client-list [clientsInput$]=\"clientIn$\"></app-client-list>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n      <div class=\"footer\">\n        <div class=\"container\">\n          <div class=\"row\">\n          </div>\n        </div>\n      </div>\n      <footer class=\"footer\">\n        <div class=\"container\">\n          <div class=\"row align-items-center flex-row-reverse\">\n            <div class=\"col-auto ml-lg-auto\">\n              <div class=\"row align-items-center\">\n                <div class=\"col-auto\">\n                  <ul class=\"list-inline list-inline-dots mb-0\">\n                    <li class=\"list-inline-item\"><a href=\"#\">Documentation</a></li>\n                    <li class=\"list-inline-item\"><a href=\"#\">FAQ</a></li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-12 col-lg-auto mt-3 mt-lg-0 text-center\">\n              Copyright © 2021 <a href=\"..\"> Bank Account</a> <a href=\"#\" target=\"_blank\"></a> All rights reserved.\n            </div>\n          </div>\n        </div>\n      </footer>\n","\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n /// public isAuth:boolean=true;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    //this.isAuth=false;\r\n  }\r\n\r\n}\r\n","import { BrokerService } from './../broker/broker.service';\r\nimport { ClientService } from './../services/client.service';\r\nimport { Client } from './../class/client';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthentificationService } from '../services/authentification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm: FormGroup;\r\n  public isAuth:boolean= true;\r\n\r\n\r\n\r\n  constructor(private authServ: AuthentificationService, private router: Router,private fb: FormBuilder, private service: ClientService, private broker: BrokerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      accountNumber: ['', [Validators.required,  Validators.maxLength(10)]],\r\n      clientId: ['', [Validators.required, Validators.maxLength(10)]],\r\n    });\r\n  }\r\n\r\n  onLogin() {\r\n    if(this.loginForm?.invalid) return;\r\n    this.authServ.onLogin(this.loginForm?.value).subscribe(resp => {\r\n        this.authServ.saveToken(resp.body);\r\n        this.isAuth=false;\r\n        this.router.navigate([\"/operation\"]);\r\n  }, err => {\r\n    console.log( ' AuthentificationService KO');\r\n  });\r\n}\r\n}\r\n","<body class=\"\" *ngIf=\"isAuth\">\r\n    <div class=\"page\">\r\n        <div class=\"page-single\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n\r\n                    <div class=\"col col-login mx-auto\">\r\n\r\n                        <div class=\"text-center \">\r\n                            <img src=\"assets/logo/sg.jpg\"  alt=\"SG\">\r\n                        </div>\r\n\r\n                        <form  (ngSubmit)=\"onLogin()\" [formGroup]=\"loginForm\">\r\n\r\n                            <div class=\"card-body p-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\">Account Number</label>\r\n                                    <input name=\"accountNumber\" type=\"text\" class=\"form-control\" id=\"accountNumber\"\r\n                                    autocomplete=\"false\" placeholder=\"Account Numbe\" formControlName=\"accountNumber\"\r\n                                    [ngClass]=\"{'is-invalid':loginForm.get('accountNumber').touched && !loginForm.get('accountNumber').valid}\">\r\n                                    <div class=\"invalid-feedback\">\r\n                                      <span *ngIf=\"loginForm.get('accountNumber').errors?.required\">\r\n                                          Entrez votre numéro de compte\r\n                                      </span>\r\n                                      <span *ngIf=\"loginForm.get('accountNumber').errors?.maxlength\">\r\n                                          Maxnimum 10 charactères\r\n                                      </span>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-label\"> Client ID </label>\r\n                                    <input name=\"clientId\" type=\"password\" class=\"form-control\" id=\"clientId\" autocomplete=\"false\"\r\n                                    placeholder=\"Client ID\" formControlName=\"clientId\"\r\n                                    [ngClass]=\"{'is-invalid':loginForm.get('clientId').touched && !loginForm.get('clientId').valid}\">\r\n\r\n                                    <div class=\"invalid-feedback\">\r\n                                      <span *ngIf=\"loginForm.get('clientId').errors?.required\">\r\n                                          Entrez votre Id client\r\n                                      </span>\r\n                                      <span *ngIf=\"loginForm.get('clientId').errors?.maxlength\">\r\n                                          Maxnimum 10 charactères\r\n                                      </span>\r\n                                  </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form-footer\">\r\n                                    <button type=\"submit\" class=\"btn btn-red btn-block\">Sign in</button>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </form>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n","import { AuthentificationService } from './../services/authentification.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Client } from '../class/client';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  public client: Client;\r\n\r\n  constructor(private auth:AuthentificationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.client=this.auth.loadInfoClient();\r\n  }\r\n\r\n  public deconexion(){\r\n    this.auth.deconexion();\r\n  }\r\n\r\n}\r\n","<div class=\"header py-4\">\r\n  <div class=\"container\">\r\n    <div class=\"d-flex\">\r\n      <a class=\"header-brand\" routerLink=\"/account\">\r\n        <img src=\"assets/logo/sg.jpg\" alt=\"SG\">\r\n      </a>\r\n      <div class=\"d-flex order-lg-2 ml-auto\">\r\n        <div class=\"dropdown\">\r\n          <a href=\"#\" class=\"nav-link pr-0 leading-none\" data-toggle=\"dropdown\">\r\n            <span class=\"ml-2 d-none d-lg-block\">\r\n              <span class=\"text-default\" style=\"color: black; font-weight: bold;\"> {{client.firstName}} | {{client.lastName}}</span>\r\n              <small class=\"text-muted d-block mt-1\">Account Number : {{client.accountNumber}}</small>\r\n              <small  style=\"color: red; font-size: 14px;\">Balance: 10 € </small>\r\n            </span>\r\n          </a>\r\n          <a href=\"#\" (click)=\"deconexion()\" title=\"Deconexion\" >\r\n            <img src=\"assets/images/logout/gnome_session_logout.png\"  alt=\"Deconexion\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"header collapse d-lg-flex p-0\" id=\"headerMenuCollapse\">\r\n  <div class=\"container\">\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-lg-3 ml-auto\">\r\n        <form class=\"input-icon my-3 my-lg-0\">\r\n          <input type=\"search\" class=\"form-control header-search\" placeholder=\"Search&hellip;\" tabindex=\"1\">\r\n          <div class=\"input-icon-addon\">\r\n            <i class=\"fe fe-search\"></i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-lg order-lg-first\">\r\n        <ul class=\"nav nav-tabs border-0 flex-column flex-lg-row\">\r\n          <li class=\"nav-item\">\r\n            <a routerLink='/account' class=\"nav-link\" style=\"color: red;\"><i class=\"fe fe-home\"></i> Home</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/operation' data-toggle=\"dropdown\">\r\n              <i class=\"fe fe-box\"></i> Opérations\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/client'>\r\n              <i class=\"fe fe-box\"></i> Clients\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/client'>\r\n              <i class=\"fe fe-box\"></i> Beneficiare\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/account'>\r\n              <i class=\"fe fe-box\"></i> Account\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Client } from 'src/app/class/client';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { OperationService } from './../services/operation.service';\r\nimport { AuthentificationService } from './../services/authentification.service';\r\nimport { Expression } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BrokerService } from '../broker/broker.service';\r\nimport { ActionsTypes } from '../state/state';\r\nimport { Operation } from '../class/operation';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-operation',\r\n  templateUrl: './operation.component.html',\r\n  styleUrls: ['./operation.component.css']\r\n})\r\nexport class OperationComponent implements OnInit {\r\n  public opertationForm: FormGroup;\r\n  public client: Client;\r\n  public operation:any;\r\n  displayErrorMessage: boolean = false;\r\n  typeOperation: string=\"CREDIT\";\r\n\r\n  constructor(private fb: FormBuilder, private auth: AuthentificationService,\r\n    private service: OperationService, private broker: BrokerService,private router:Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.opertationForm = this.fb.group({\r\n      type: ['', [Validators.required]],\r\n      amountOperation: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(10)]],\r\n      accountNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n      description:['', [Validators.required, Validators.maxLength(40)]],\r\n      beneficiary: '',\r\n    });\r\n    this.getAllOperation();\r\n  }\r\n\r\n\r\n\r\n  public saveData() {\r\n    if (this.opertationForm?.invalid) return;\r\n    this.service.save(this.opertationForm?.value)\r\n      .subscribe(data => {\r\n        this.broker.publishEvent({ type: ActionsTypes.ADD_CLIENT });\r\n      },err => {\r\n        console.log('hello' + err.code);\r\n        console.log( ' AuthentificationService KO   ' + err.message);\r\n      })\r\n  }\r\n\r\n\r\n  public getAllOperation(){\r\n    this.service.getAllOperationClient().subscribe(data => {\r\n       this.operation = data;\r\n        this.broker.publishEvent({ type: ActionsTypes.GET_ALL_CLIENTS});\r\n        data.forEach(console.log)\r\n      },err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  reloadCurrentPage() {\r\n    window.location.reload();\r\n   }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row mt-4 mb-4\">\r\n    <h1 style=\"text-align: center;\">OPERATIONS</h1>\r\n  </div>\r\n  <div class=\"col\">\r\n    <div class=\"col-sm-5\">\r\n      <form (ngSubmit)=\"saveData()\" [formGroup]=\"opertationForm\">\r\n        <div class=\"form-group\">\r\n          <div class=\"form-label\">Type Opération</div>\r\n          <div class=\"custom-switches-stacked\">\r\n            <label class=\"custom-switch\">\r\n              <input type=\"radio\" name=\"type\" value=\"CREDIT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\r\n                class=\"custom-switch-input\" checked>\r\n              <span class=\"custom-switch-indicator\"></span>\r\n              <span class=\"custom-switch-description\">Dépot</span>\r\n            </label>\r\n            <label class=\"custom-switch\">\r\n              <input type=\"radio\" name=\"type\" value=\"DEBIT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\r\n                class=\"custom-switch-input\">\r\n              <span class=\"custom-switch-indicator\"></span>\r\n              <span class=\"custom-switch-description\">Retrait</span>\r\n            </label>\r\n            <label class=\"custom-switch\">\r\n              <input type=\"radio\" name=\"type\" value=\"TRANSFERT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\r\n                class=\"custom-switch-input\">\r\n              <span class=\"custom-switch-indicator\"></span>\r\n              <span class=\"custom-switch-description\">Virement</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"amountOperation\">Montant:</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"amountOperation\" name=\"amountOperation\"\r\n            formControlName=\"amountOperation\"\r\n            [ngClass]=\"{'is-invalid':opertationForm.get('amountOperation').touched && !opertationForm.get('amountOperation').valid}\">\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"opertationForm.get('amountOperation').errors?.required\">\r\n              Entrez le montant\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"accountNumber\">Numéro Compte à Débiter:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"pwd\" name=\"aaccountNumber\" formControlName=\"accountNumber\"\r\n            [ngClass]=\"{'is-invalid':opertationForm.get('accountNumber').touched && !opertationForm.get('accountNumber').valid}\">\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"opertationForm.get('accountNumber').errors?.required\">\r\n              Entrez votre numéro de compte\r\n            </span>\r\n            <span *ngIf=\"opertationForm.get('accountNumber').errors?.maxlength\">\r\n              Maxnimum 10 charactères\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"typeOperation=='TRANSFERT'\">\r\n          <label for=\"account-cred\">Numéro Compte à Créditer:</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"pwd\" name=\"account-cred\" formControlName=\"beneficiary\">\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <label for=\"description\">Description</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"description\" name=\"description\" formControlName=\"description\"\r\n            [ngClass]=\"{'is-invalid':opertationForm.get('description').touched && !opertationForm.get('description').valid}\">\r\n\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"opertationForm.get('description').errors?.required\">\r\n              Entrez une description de l'opération\r\n            </span>\r\n            <span *ngIf=\"opertationForm.get('description').errors?.maxlength\">\r\n              Maxnimum 40 charactères\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <br>\r\n        <button type=\"submit\" class=\"btn btn-red\"  (click)=\"reloadCurrentPage()\" >Valider</button>\r\n        <button type=\"submit\" class=\"btn btn-red ml-2\">\r\n          <a routerLink=\"/printPage\" style=\"color: white;text-decoration: none;\"> Print </a>\r\n        </button>\r\n      </form>\r\n    </div>\r\n    <div>\r\n      <span style=\"text-align: center; margin-top: 2%; margin-bottom: 2%;\">\r\n        <h6>Liste Opérations</h6>\r\n      </span>\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Opération</th>\r\n            <th>Crédit</th>\r\n            <th>Débit</th>\r\n            <th>Balance</th>\r\n            <th>Date</th>\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let op of operation\">\r\n            <td>\r\n              {{op.description}}\r\n            </td>\r\n            <td style=\"color:green; font-weight: bold;\">\r\n              {{op.creditAmount}}\r\n            </td>\r\n            <td style=\"color: red; font-weight: bold;\">\r\n              - {{op.debitAmount}}\r\n            </td>\r\n            <td>\r\n              {{op.balance}}\r\n            </td>\r\n            <td>\r\n              {{op.dateOperation}}\r\n            </td>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","\r\nimport { OperationService } from './../services/operation.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-print-page',\r\n  templateUrl: './print-page.component.html',\r\n  styleUrls: ['./print-page.component.css'],\r\n})\r\nexport class PrintPageComponent implements OnInit {\r\n  constructor(private service: OperationService) {}\r\n  public operation: any;\r\n  public display:boolean=false;\r\n\r\n  ngOnInit(): void {\r\n    this.getAllOperation();\r\n  }\r\n\r\n  public getAllOperation() {\r\n    this.service.getAllOperationClient().subscribe(\r\n      (data) => {\r\n        this.operation = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n\r\n  onprintHistoriqueCompte(cmpName) {\r\n    this.display=false\r\n    let printContents = document.getElementById(cmpName).innerHTML;\r\n    let originalContents = document.body.innerHTML;\r\n    document.body.innerHTML = printContents;\r\n    window.print();\r\n    document.body.innerHTML = originalContents;\r\n}\r\n}\r\n","<div class=\"row mb-4 mt-4\" >\r\n  <div class=\"col-6\">\r\n    <button type=\"submit\" class=\"btn btn-red mb-4\">\r\n      <a routerLink=\"/operation\" style=\"color: white;text-decoration: none;\"> Nouvelle Opération</a>\r\n    </button>\r\n    <button type=\"submit\" class=\"btn btn-red ml-2 mb-4\" (click)=\"onprintHistoriqueCompte('historique')\">\r\n      Print\r\n    </button>\r\n  </div>\r\n</div>\r\n<div class=\"container\" id=\"historique\">\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <p class=\"h3\">SOCIETE GENERALE</p>\r\n      <address>\r\n        Street Address:<br>\r\n        State, City:<br>\r\n        Region, Postal Code:<br>\r\n        ltd@sg.com\r\n      </address>\r\n    </div>\r\n    <div class=\"col-6 text-end\">\r\n      <p class=\"h3\">Client</p>\r\n      <address>\r\n        Name<br>\r\n        Account Number <br>\r\n        Street Address<br>\r\n        State, City<br>\r\n        Region, Postal Code<br>\r\n        ctr@example.com\r\n      </address>\r\n    </div>\r\n  </div>\r\n  <div style=\"text-align: center;\">\r\n\r\n    <h3>HISTORIQUE COMPTE</h3>\r\n\r\n  </div>\r\n  <br />\r\n  <form>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>N°</th>\r\n          <th>Crédit</th>\r\n          <th>Débit</th>\r\n          <th>Balance</th>\r\n          <th>Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let op of operation\">\r\n          <td>\r\n            {{op.idOperation}}\r\n          </td>\r\n          <td style=\"color:green; font-weight: bold;\">\r\n            {{op.creditAmount}}\r\n          </td>\r\n          <td style=\"color: red; font-weight: bold;\">\r\n            - {{op.debitAmount}}\r\n          </td>\r\n          <td>\r\n            {{op.balance}}\r\n          </td>\r\n          <td>\r\n            {{op.dateOperation}}\r\n          </td>\r\n      </tbody>\r\n    </table>\r\n  </form>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Client } from '../class/client';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthentificationService {\r\n\r\n jwt: string;\r\n client: Client;\r\n host:string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.host = environment.auth;\r\n  }\r\n\r\n\r\n  onLogin(data) {\r\n   return this.http.post(this.host, data, { observe: 'response' });\r\n  }\r\n\r\n  saveToken(token: any) {\r\n    localStorage .setItem('token', token);\r\n  }\r\n\r\n\r\n   loadInfoClient(): Client {\r\n    const jwtHelper = new JwtHelperService();\r\n    this.client = new Client;\r\n     // decode JWT\r\n    const obJwt = jwtHelper.decodeToken(localStorage.getItem('token'));\r\n\r\n    this.client.id = obJwt.id;\r\n    this.client.accountNumber = obJwt.accountNumber;\r\n    this.client.firstName = obJwt.firstName;\r\n    this.client.lastName = obJwt.lastName;\r\n    this.client.phoneNumber = obJwt.phoneNumber;\r\n    this.client.clientId = obJwt.clientId;\r\n    this.client.emailAdress = obJwt.emailAdress;\r\n    this.client.birtDayDate = obJwt.birtDayDate;\r\n    this.client.clientId = obJwt.clientId;\r\n    this.client.role = obJwt.role;\r\n\r\n    return this.client;\r\n  }\r\n\r\n  isAuthentication() {\r\n    if (localStorage.getItem('token') != null) {\r\n      return true;\r\n    }\r\n    return false ;\r\n  }\r\n\r\n  deconexion() {\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from '../class/client';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  host: string;\n  context_path: string;\n  constructor(private http: HttpClient) {\n    this.host = environment.host;\n    this.context_path = environment.context_path;\n  }\n\n\n  getAllClient(): Observable<Client[]> {\n    return this.http.get<Client[]>(this.host + this.context_path + \"/client/all\");\n  }\n  save(client: Client): Observable<Client> {\n    return this.http.post<Client>(this.host + this.context_path + \"/client\", client);\n  }\n  getClient(id: number): Observable<Client> {\n    return this.http.get<Client>(this.host + this.context_path + \"/client/\" + id);\n  }\n\n}\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Operation } from '../class/operation';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OperationService {\r\n\r\n  host: string;\r\n  context_path: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.host = environment.host;\r\n    this.context_path = environment.context_path;\r\n  }\r\n\r\n  getAllOperationClient(): Observable<Operation[]> {\r\n    return this.http.get<Operation[]>(this.host + this.context_path + \"/operation\");\r\n  }\r\n  save(operation: Operation): Observable<Operation> {\r\n    return this.http.post<Operation>(this.host + this.context_path + \"/operation\", operation);\r\n  }\r\n  getOperation(id: number): Observable<Operation> {\r\n    return this.http.get<Operation>(this.host + this.context_path + \"/operation/\" + id);\r\n  }\r\n}\r\n","\nexport enum ActionsTypes{\n    GET_ALL_CLIENTS=\"[Client] Get All clients\",\n    GET_SELECTED_CLIENT=\"[Client] Get Selected client\",\n    NEW_CLIENT=\"[Client] New client\",\n    ADD_CLIENT=\"[Client] New client\",\n  }\n  \n  export interface ActionEvent {\n    type:ActionsTypes,\n    payload?:any\n  }\n  export enum DataStateEnum {\n    LOADING,\n    LOADED,\n    ERROR\n  }\n  \n  export interface AppDataState<T> {\n    dataState:DataStateEnum,\n    data?:T,\n    errorMessage?:string\n  }","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  host:\"http://localhost:8080\",\r\n  auth:\"http://localhost:8080/login\",\r\n  context_path:\"/api/v1\",\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}