{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/broker/broker.service.ts","./src/app/class/account.ts","./src/app/class/client.ts","./src/app/client/client-list/client-item/client-item.component.ts","./src/app/client/client-list/client-item/client-item.component.html","./src/app/client/client-list/client-list.component.ts","./src/app/client/client-list/client-list.component.html","./src/app/client/client.component.ts","./src/app/client/client.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/operation/operation.component.ts","./src/app/operation/operation.component.html","./src/app/print-page/print-page.component.ts","./src/app/print-page/print-page.component.html","./src/app/services/account.service.ts","./src/app/services/authentification.service.ts","./src/app/services/client.service.ts","./src/app/services/operation.service.ts","./src/app/state/state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGO;AACP;AACyB;;;;;;;ICQxD,uEACE;IAAA,iGACF;IAAA,4DAAO;;;IACP,uEACE;IAAA,yFACF;IAAA,4DAAO;;;IAwBT,qEACE;IAAA,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,qEACE;IAAA,uDACF;IAAA,4DAAK;IACT,4DAAQ;;;IAXF,0DACF;IADE,oGACF;IAEE,0DACF;IADE,2FACF;IAEE,0DACF;IADE,4FACF;IAEE,0DACF;IADE,kGACF;;;AD1CL,MAAM,gBAAgB;IAM3B,YACU,EAAe,EACf,IAA6B,EAC7B,cAA8B;QAF9B,OAAE,GAAF,EAAE,CAAa;QACf,SAAI,GAAJ,IAAI,CAAyB;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QAPjC,WAAM,GAAW,IAAI,oDAAM,EAAE,CAAC;QAC9B,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;IAOrC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAE;QACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,aAAa,EAAE;gBACb,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB;aACF;SACF,CAAC,CAAC;IAEL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC3C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,qBAAqB;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,QAAQ;;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACnC,UAAI,IAAI,CAAC,WAAW,0CAAE,OAAO;YAAE,OAAO;QACtC,IAAI,CAAC,cAAc,CAAC,IAAI,OAAC,IAAI,CAAC,WAAW,0CAAE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACnE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACC,CAAC,GAAG,EAAE,EAAE;YACN,qBAAqB;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;;gFAzDS,gBAAgB;gGAAhB,gBAAgB;QCb7B,yEACE;QAAA,yEACE;QAAA,wEAAgC;QAAA,8EAAmB;QAAA,4DAAK;QAC1D,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,0EAEE;QAFe,4IAAY,cAAU,IAAC;QAEtC,yEACE;QAAA,sEAIA;QAAA,yEACE;QAAA,gHACE;QAEF,gHACE;QAEJ,4DAAM;QACR,4DAAM;QAGN,8EAA2C;QAAA,uEAAM;QAAA,4DAAS;QAC5D,4DAAO;QAGT,4DAAM;QACN,2EACE;QAAA,4EACE;QAAA,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAC5B,4DAAO;QACP,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACvB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,6GACE;QAFJ,4DACE;QAcJ,4DAAQ;QACV,4DAAM;QACN,4DAAM;QACR,4DAAM;;QAtDuC,0DAAyB;QAAzB,sFAAyB;QAK5D,0DAA8G;QAA9G,uOAA8G;QAGxG,0DAAyD;QAAzD,mLAAyD;QAGzD,0DAA0D;QAA1D,oLAA0D;QA0B9D,2DAAmC;QAAnC,oFAAmC;;6FD9BpC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AACjB;AACb;AACc;AACQ;AACM;AACT;AACH;;;AAGzD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;IACrD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,mFAAkB,EAAE;CACrD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;ICA1C,uEAAyC;;;IACzC,sEAAsC;;;IACtC,2EAAgD;;;IAEhD,wEAA0C;;ADInC,MAAM,YAAY;IAGvB,YAAoB,QAAiC;QAAjC,aAAQ,GAAR,QAAQ,CAAyB;QAFrD,UAAK,GAAG,oBAAoB,CAAC;IAE2B,CAAC;IAEzD,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;IAC1C,CAAC;;wEAPU,YAAY;4FAAZ,YAAY;QCRzB,oHAA6B;QAC7B,kHAA2B;QAC3B,4HAAgC;QAChC,8EAA4C;QAC5C,sHAA6B;;QAJlB,+EAAiB;QAClB,0DAAgB;QAAhB,8EAAgB;QACX,0DAAgB;QAAhB,8EAAgB;QAEnB,0DAAgB;QAAhB,8EAAgB;;6FDIf,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACyB;AACV;AACT;AACO;AACS;AACM;AACT;AACN;AAC2B;AACY;AACjC;AACH;AACH;AACiB;;AA8BhE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,kEAAmB;YACnB,0DAAW;YACX,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;SAEjB;mIAIU,SAAS,mBAvBlB,2DAAY;QACZ,kEAAa;QACb,2EAAgB;QAChB,iFAAkB;QAClB,wEAAe;QACf,8FAAmB;QACnB,0GAAmB;QACnB,yEAAe;QACf,sEAAc;QACd,mEAAa;QACb,oFAAkB,aAGlB,kEAAmB;QACnB,0DAAW;QACX,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;6FAMP,SAAS;cAzBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,2EAAgB;oBAChB,iFAAkB;oBAClB,wEAAe;oBACf,8FAAmB;oBACnB,0GAAmB;oBACnB,yEAAe;oBACf,sEAAc;oBACd,mEAAa;oBACb,oFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,kEAAmB;oBACnB,0DAAW;oBACX,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;iBAEjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAA2C;AACZ;;AAMxB,MAAM,aAAa;IAH1B;QAKE,uBAAkB,GAAsB,IAAI,4CAAO,EAAe,CAAC;QACnE,iCAA4B,GAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KAQrE;IANC,sEAAsE;IACtE,uEAAuE;IAEvE,YAAY,CAAC,KAAiB;QAC5B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;;0EAVU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,OAAO;CASnB;;;;;;;;;;;;;ACTD;AAAA;AAAO,MAAM,MAAM;CAWlB;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAyD;;;;ICSjD,uEAA4B;IAAA,kEAAO;IAAA,4DAAO;;;IAC1C,uEAA6B;IAAA,gEAAK;IAAA,4DAAO;;;;IAVjD,qEACI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEACE;IAAA,6EACE;IADM,mUAA0B;IAChC,wHAA4B;IAC5B,wHAA6B;IAC/B,4DAAS;IACX,4DAAK;IACL,sEACE;IAAA,6EACE;IAD6B,iUAAwB;IACrD,2EAAyB;IAAA,gEAAI;IAAA,4DAAO;IACtC,4DAAS;IACX,4DAAK;IACP,4DAAK;;;IAjBC,0DAAa;IAAb,iFAAa;IACb,0DAAoB;IAApB,wFAAoB;IACpB,0DAAmB;IAAnB,uFAAmB;IACnB,0DAAsB;IAAtB,0FAAsB;IACtB,0DAAwB;IAAxB,4FAAwB;IACxB,0DAAmB;IAAnB,uFAAmB;IAEc,0DAAoD;IAApD,wHAAoD;IAC/E,0DAAqB;IAArB,sFAAqB;IACrB,0DAAsB;IAAtB,uFAAsB;;ADF7B,MAAM,mBAAmB;IAI9B;QAFS,WAAM,GAAkB,IAAI,CAAC;IAEtB,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,MAAM,CAAC,MAAc;IAErB,CAAC;IACD,QAAQ,CAAC,MAAc;IAEvB,CAAC;;sFAdU,mBAAmB;mGAAnB,mBAAmB;QCRhC,8GACI;;QADA,4EAAc;;6FDQL,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;kBAGE,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAES;;;;;ICA5D,wEACE;IAAA,0EACF;IAAA,qEAAe;;;IACf,wEACE;IAAA,yEACE;IAAA,uDACF;IAAA,4DAAM;IACR,qEAAe;;;IAFX,0DACF;IADE,kGACF;;;IAOE,gFAGkB;;;IAFhB,wEAAY;;;IANlB,wEACE;IAAA,2EACE;IAAA,qEACE;IAAA,qEAAI;IAAA,6DAAE;IAAA,4DAAK;IAAA,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAAA,qEAAI;IAAA,mEAAQ;IAAA,4DAAK;IAAA,qEAAI;IAAA,0EAAc;IAAA,4DAAK;IAAA,sEAAI;IAAA,8EAAa;IAAA,4DAAK;IAAA,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAAA,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IAAA,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IAC7I,4DAAK;IACL,uKAGA;IACF,4DAAQ;IACV,qEAAe;;;IAHT,2DAA6B;IAA7B,mFAA6B;;;IAhBrC,2EACE;IAAA,gJACE;IAEF,gJACE;IAIF,iJACE;IAUJ,qEAAe;;;;IApByC,yFAA6B;IACrE,0DAAqC;IAArC,sGAAqC;IAGrC,0DAAmC;IAAnC,oGAAmC;IAKnC,0DAAoC;IAApC,qGAAoC;;ADAjD,MAAM,mBAAmB;IAI9B;QAFS,kBAAa,GAAC,iEAAa,CAAC;IAErB,CAAC;IAEjB,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAE,CAAC;IAC7C,CAAC;;sFARU,mBAAmB;mGAAnB,mBAAmB;QCT5B,iIACE;;;QADY,oJAAyC;;6FDS9C,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;kBAEE,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACsB;AAIS;AAClD;AACsB;;;;;;;;ICMpC,uEACI;IAAA,6EACJ;IAAA,4DAAO;;;IACP,uEACI;IAAA,yFACJ;IAAA,4DAAO;;;IASP,uEACI;IAAA,6EACJ;IAAA,4DAAO;;;IACP,uEACI;IAAA,uFACJ;IAAA,4DAAO;;;IASP,uEACI;IAAA,sFACJ;IAAA,4DAAO;;;IACP,uEACI;IAAA,6FACJ;IAAA,4DAAO;;;IASP,uEACI;IAAA,wHACJ;IAAA,4DAAO;;;AD3CxB,MAAM,eAAe;IAO1B,YAAoB,EAAe,EAAU,OAAsB,EAAU,MAAqB;QAA9E,OAAE,GAAF,EAAE,CAAa;QAAU,YAAO,GAAP,OAAO,CAAe;QAAU,WAAM,GAAN,MAAM,CAAe;QAHlG,cAAS,GAA0C,IAAI,CAAC;IAG8C,CAAC;IAEvG,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,yDAAY,CAAC,eAAe,EAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC,WAAwB,EAAE,EAAE;YAC9E,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACxF,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC1D,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;SAChB,CAAC,CAAC;IAGL,CAAC;IACD,aAAa,CAAC,MAAmB;QAC/B,QAAQ,MAAM,CAAC,IAAI,EAAE;YACnB,KAAK,yDAAY,CAAC,eAAe;gBAAE,IAAI,CAAC,eAAe,EAAE,CAAC;gBAAA,MAAM;SACjE;IACH,CAAC;IACD,eAAe;QACb,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAC7C,0DAAG,CAAC,IAAI,GAAE;YACR,OAAO,CAAC,EAAC,SAAS,EAAC,0DAAa,CAAC,MAAM,EAAC,IAAI,EAAC,IAAI,EAAC,CAAC;QACrD,CAAC,CAAC,EACF,gEAAS,CAAC,EAAC,SAAS,EAAC,0DAAa,CAAC,OAAO,EAAC,CAAC,EAC5C,iEAAU,CAAC,GAAG,GAAE,gDAAE,CAAC,EAAC,SAAS,EAAC,0DAAa,CAAC,KAAK,EAAE,YAAY,EAAC,GAAG,CAAC,OAAO,EAAC,CAAC,CAAC,CAC/E,CAAC;IACJ,CAAC;IAEM,QAAQ;;QACb,UAAI,IAAI,CAAC,UAAU,0CAAE,OAAO;YAAE,OAAO;QACrC,IAAI,CAAC,OAAO,CAAC,IAAI,OAAC,IAAI,CAAC,UAAU,0CAAE,KAAK,CAAC;aACtC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,eAAe,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,yDAAY,CAAC,UAAU,EAAE,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC;IACzB,CAAC;IAED,iBAAiB;QACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;;8EArDS,eAAe;+FAAf,eAAe;QCd5B,yEACE;QAAA,yEACE;QAAA,wEAAgC;QAAA,iEAAM;QAAA,4DAAK;QAC7C,4DAAM;QACJ,yEACI;QAAA,yEACI;QAAA,0EAEI;QAFa,2IAAY,cAAU,IAAC;QAEpC,yEACI;QAAA,sEAGA;QAAA,yEACI;QAAA,+GACI;QAEJ,+GACI;QAER,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,wEAGA;QAAA,0EACI;QAAA,+GACI;QAEJ,+GACI;QAER,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,wEAGA;QAAA,0EACI;QAAA,+GACI;QAEJ,+GACI;QAER,4DAAM;QACV,4DAAM;QAGN,0EACI;QAAA,wEAEA;QAAA,0EACI;QAAA,+GACI;QAER,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,wEAEJ;QAAA,4DAAM;QAGN,8EAAyE;QAA/B,wIAAS,uBAAmB,IAAC;QAAE,uEAAW;QAAA,4DAAS;QACjG,4DAAO;QAGX,4DAAM;QACN,2EACI;QAAA,kFAA+D;QACnE,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAtE+C,0DAAwB;QAAxB,qFAAwB;QAIzB,0DAAoG;QAApG,8NAAoG;QAG1H,0DAAoD;QAApD,yKAAoD;QAGpD,0DAAqD;QAArD,0KAAqD;QAQ3D,0DAAoG;QAApG,4NAAoG;QAG9F,0DAAmD;QAAnD,uKAAmD;QAGnD,0DAAoD;QAApD,wKAAoD;QAQ5B,0DAAyG;QAAzG,kOAAyG;QAGjI,0DAAsD;QAAtD,6KAAsD;QAGtD,0DAAmD;QAAnD,0KAAmD;QAS3B,0DAAyG;QAAzG,kOAAyG;QAEjI,0DAAsD;QAAtD,6KAAsD;QAkBvD,0DAA2B;QAA3B,wFAA2B;;6FD3D3C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCNtB,yEACE;QAAA,yEACE;QAAA,oEACM;QACR,4DAAM;QACR,4DAAM;QACN,4EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEACE;QAAA,yEAA6B;QAAA,wEAAY;QAAA,yEAAa;QAAA,4DAAI;QAAA,4DAAK;QAC/D,yEAA6B;QAAA,wEAAY;QAAA,+DAAG;QAAA,4DAAI;QAAA,4DAAK;QACvD,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,mFAAiB;QAAA,yEAAc;QAAA,yEAAY;QAAA,4DAAI;QAAC,oEAAgC;QAAC,kFACnF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAS;;6FDlBF,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACF;AAEO;;;;AAO3C,MAAM,aAAa;IAIxB,YAAoB,IAA4B,EAAU,cAA6B;QAAnE,SAAI,GAAJ,IAAI,CAAwB;QAAU,mBAAc,GAAd,cAAc,CAAe;QAHhF,WAAM,GAAU,IAAI,oDAAM,EAAE,CAAC;QAC7B,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;IAEmD,CAAC;IAE5F,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAGD,kBAAkB;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CACtD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,qBAAqB;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,OAAO;QAEvB,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;QAC/D,IAAI,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;QAC/C,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QACxC,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;IAC/C,CAAC;;0EA9BY,aAAa;6FAAb,aAAa;QCZ1B,4EACE;QADuD,qIAAS,sBAAkB,aAAa,CAAC,IAAC;QACjG,mEACF;QAAA,4DAAS;QAET,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAAqE;QAAA,oFAAyB;QAAA,4DAAM;QACxG,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEAA0C;QAAA,wDAAyB;QAAA,4DAAM;QAC7E,4DAAM;QACN,0EACI;QAAA,0EAA0C;QAAA,wDAA6B;QAAA,4DAAM;QACjF,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EAAyC;QAAA,wDAAsB;QAAA,4DAAM;QACzE,4DAAM;QACN,0EACI;QAAA,0EAA0C;QAAA,wDAAuB;QAAA,4DAAM;QAC3E,4DAAM;QACN,0EACI;QAAA,0EAAyC;QAAA,wDAA4C;QAAA,4DAAM;QAC/F,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EAAyC;QAAA,wDAA+B;QAAA,4DAAM;QAClF,4DAAM;QACN,0EACI;QAAA,0EAA0C;QAAA,wDAAkC;QAAA,4DAAM;QACtF,4DAAM;QACN,0EACI;QAAA,0EAAyC;QAAA,wDAA8B;QAAA,4DAAM;QACjF,4DAAM;QACN,0EACI;QAAA,0EAA0C;QAAA,wDAAuC;QAAA,4DAAM;QAC3F,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA/BgD,2DAAyB;QAAzB,oGAAyB;QAGzB,0DAA6B;QAA7B,uGAA6B;QAK9B,0DAAsB;QAAtB,+FAAsB;QAGrB,0DAAuB;QAAvB,iGAAuB;QAGxB,0DAA4C;QAA5C,sHAA4C;QAK5C,0DAA+B;QAA/B,yGAA+B;QAG9B,0DAAkC;QAAlC,4GAAkC;QAGnC,0DAA8B;QAA9B,wGAA8B;QAG7B,0DAAuC;QAAvC,iHAAuC;;6FD5BhF,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAIuB;AAClB;;;;;;;;;;ICeZ,uEACI;IAAA,+FACJ;IAAA,4DAAO;;;IACP,uEACI;IAAA,yFACJ;IAAA,4DAAO;;;IAWP,uEACI;IAAA,mFACJ;IAAA,4DAAO;;;IACP,uEACI;IAAA,yFACJ;IAAA,4DAAO;;;;;IA1C7C,0EACI;IAAA,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,yEAEI;IAAA,yEAEI;IAAA,yEACI;IAAA,oEACJ;IAAA,4DAAM;IAEN,0EAEI;IAFG,qTAAsB;IAEzB,0EACI;IAAA,2EACI;IAAA,6EAA0B;IAAA,0EAAc;IAAA,4DAAQ;IAChD,wEAGA;IAAA,2EACE;IAAA,sHACI;IAEJ,sHACI;IAER,4DAAM;IACR,4DAAM;IAEN,2EACI;IAAA,6EAA2B;IAAA,uEAAU;IAAA,4DAAQ;IAC7C,wEAIA;IAAA,2EACE;IAAA,sHACI;IAEJ,sHACI;IAER,4DAAM;IAER,4DAAM;IAEN,2EACI;IAAA,8EAAoD;IAAA,mEAAO;IAAA,4DAAS;IACxE,4DAAM;IAGV,4DAAM;IACV,4DAAO;IAGX,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;;;IAlD+C,0DAAuB;IAAvB,uFAAuB;IAOzC,0DAA0G;IAA1G,yOAA0G;IAElG,0DAAuD;IAAvD,qLAAuD;IAGvD,0DAAwD;IAAxD,sLAAwD;IAUhE,0DAAgG;IAAhG,+NAAgG;IAGxF,0DAAkD;IAAlD,2KAAkD;IAGlD,0DAAmD;IAAnD,4KAAmD;;ADxBxF,MAAM,cAAc;IAKzB,YACU,QAAiC,EACjC,MAAc,EACd,EAAe,EACf,OAAsB,EACtB,cAA8B,EAC9B,MAAqB;QALrB,aAAQ,GAAR,QAAQ,CAAyB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAe;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAe;QATxB,WAAM,GAAY,IAAI,CAAC;QACtB,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;IAStC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACpE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAChE,CAAC,CAAC;IACL,CAAC;IAED,OAAO;;QACL,UAAI,IAAI,CAAC,SAAS,0CAAE,OAAO;YAAE,OAAO;QACpC,IAAI,CAAC,QAAQ,CAAC,OAAO,OAAC,IAAI,CAAC,SAAS,0CAAE,KAAK,CAAC,CAAC,SAAS,CACpD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,wBAAwB;YACxB,oBAAoB;QACtB,CAAC,EACD,GAAG,EAAE;YACH,8DAA8D;YAChE,8BAA8B;QAC9B,CAAC,CACF,CAAC;IACJ,CAAC;;4EAtCU,cAAc;8FAAd,cAAc;QChB3B,8GACI;;QADW,4EAAc;;6FDgBhB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,aAAa;IAIxB,YAAoB,IAA4B;QAA5B,SAAI,GAAJ,IAAI,CAAwB;IAAI,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IACzB,CAAC;;0EAZU,aAAa;6FAAb,aAAa;QCT1B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,uEACE;QAAA,oEACF;QAAA,4DAAI;QACJ,yEACE;QAAA,yEACE;QAAA,uEACE;QAAA,0EACE;QAAA,0EAAqE;QAAA,wDAA0C;QAAA,4DAAO;QACtH,6EAAuC;QAAA,wDAAyC;QAAA,4DAAQ;QAC1F,4DAAO;QACT,4DAAI;QACJ,yEACE;QADU,iIAAS,gBAAY,IAAC;QAChC,sEACF;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,4EACE;QAAA,wEACA;QAAA,2EACE;QAAA,oEAA4B;QAC9B,4DAAM;QACR,4DAAO;QACT,4DAAM;QACN,2EACE;QAAA,0EACE;QAAA,0EACE;QAAA,yEAA2D;QAAA,oEAA0B;QAAC,iEAAI;QAAA,4DAAI;QAChG,4DAAK;QACL,0EACE;QAAA,yEACE;QAAA,oEAAyB;QAAC,6EAC5B;QAAA,4DAAI;QACN,4DAAK;QACL,0EACE;QAAA,yEACE;QAAA,oEAAyB;QAAC,qEAC5B;QAAA,4DAAI;QACN,4DAAK;QAML,0EACE;QAAA,yEACE;QAAA,oEAAyB;QAAC,qEAC5B;QAAA,4DAAI;QACN,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QApD6E,2DAA0C;QAA1C,2HAA0C;QACxE,0DAAyC;QAAzC,mHAAyC;;6FDFjF,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACsB;AAIlB;AAEJ;AAGH;;;;;;;;;;IC0B/B,uEACE;IAAA,8EACF;IAAA,4DAAO;;;IAQP,uEACE;IAAA,+FACF;IAAA,4DAAO;;;IACP,uEACE;IAAA,yFACF;IAAA,4DAAO;;;IAGV,yEACC;IAAA,4EAA0B;IAAA,mGAAyB;IAAA,4DAAQ;IAC3D,uEACF;IAAA,4DAAM;;;IASF,uEACE;IAAA,uGACF;IAAA,4DAAO;;;IACP,uEACE;IAAA,yFACF;IAAA,4DAAO;;;IA0BT,qEACE;IAAA,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,yEACE;IAAA,uDACF;IAAA,4DAAK;IACL,yEACE;IAAA,uDACF;IAAA,4DAAK;IACL,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,qEACE;IAAA,wDACF;IAAA,4DAAK;IACT,4DAAQ;;;IAdF,0DACF;IADE,6FACF;IAEE,0DACF;IADE,8FACF;IAEE,0DACF;IADE,+FACF;IAEE,0DACF;IADE,yFACF;IAEE,0DACF;IADE,+FACF;;;AD/FL,MAAM,kBAAkB;IAQ7B,YACU,EAAe,EACf,IAA6B,EAC7B,OAAyB,EACzB,MAAqB,EACrB,MAAc,EACd,cAA8B;QAL9B,OAAE,GAAF,EAAE,CAAa;QACf,SAAI,GAAJ,IAAI,CAAyB;QAC7B,YAAO,GAAP,OAAO,CAAkB;QACzB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAZjC,WAAM,GAAW,IAAI,2DAAM,EAAE,CAAC;QAE9B,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;QACxC,wBAAmB,GAAY,KAAK,CAAC;QACrC,kBAAa,GAAW,QAAQ,CAAC;IAS9B,CAAC;IAEJ,QAAQ;QAEN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,eAAe,EAAE;gBACf,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,aAAa,EAAE;gBACb,EAAE;gBACF;oBACE,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,WAAW,EAAE,EAAE;SAChB,CAAC,CAAC;IACL,CAAC;IAEM,QAAQ;;QACb,UAAI,IAAI,CAAC,cAAc,0CAAE,OAAO;YAAE,OAAO;QACzC,IAAI,CAAC,OAAO,CAAC,IAAI,OAAC,IAAI,CAAC,cAAc,0CAAE,KAAK,CAAC,CAAC,SAAS,CACrD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,yDAAY,CAAC,UAAU,EAAE,CAAC,CAAC;QAC9D,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CACtD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,qBAAqB;QACvB,CAAC,EACD,GAAG,EAAE;YACH,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACzD,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,qBAAqB,CAAC,aAAa;QACxC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,SAAS,CACzD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;oFApFU,kBAAkB;kGAAlB,kBAAkB;QClB/B,yEACE;QAAA,yEACE;QAAA,yEAAwD;QAAA,uDAAsC;QAAA,4DAAM;QACpG,wEAAgC;QAAA,qEAAU;QAAA,4DAAK;QACjD,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,0EACE;QADI,8IAAY,cAAU,IAAC;QAC3B,yEACE;QAAA,0EAAwB;QAAA,+EAAc;QAAA,4DAAM;QAC5C,0EACE;QAAA,6EACE;QAAA,6EAEA;QAF+C,8LAA2B;QAA1E,4DAEA;QAAA,uEAA6C;QAC7C,4EAAwC;QAAA,sEAAK;QAAA,4DAAO;QACtD,4DAAQ;QACR,6EACE;QAAA,6EAEA;QAF8C,8LAA2B;QAAzE,4DAEA;QAAA,uEAA6C;QAC7C,4EAAwC;QAAA,mEAAO;QAAA,4DAAO;QACxD,4DAAQ;QACR,6EACE;QAAA,6EAEA;QAFkD,8LAA2B;QAA7E,4DAEA;QAAA,uEAA6C;QAC7C,4EAAwC;QAAA,oEAAQ;QAAA,4DAAO;QACzD,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,6EAA6B;QAAA,oEAAQ;QAAA,4DAAQ;QAC7C,wEAGA;QAAA,2EACE;QAAA,mHACE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,6EAA2B;QAAA,mGAAwB;QAAA,4DAAQ;QAC3D,wEAEA;QAAA,2EACE;QAAA,mHACE;QAEF,mHACE;QAEJ,4DAAM;QACR,4DAAM;QACL,iHACC;QAKF,uEACE;QAAA,6EAAyB;QAAA,uEAAW;QAAA,4DAAQ;QAC5C,wEAGA;QAAA,2EACE;QAAA,mHACE;QAEF,mHACE;QAEJ,4DAAM;QACR,4DAAM;QACN,iEACA;QAAA,8EAA2E;QAAjC,2IAAS,uBAAmB,IAAC;QAAI,mEAAO;QAAA,4DAAS;QAC3F,8EACE;QAAA,yEAAwE;QAAA,mEAAM;QAAA,4DAAI;QACpF,4DAAS;QACX,4DAAO;QACT,4DAAM;QACN,uEACE;QAAA,4EACE;QAAA,sEAAI;QAAA,iFAAgB;QAAA,4DAAK;QAC3B,4DAAO;QACP,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,0EAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,uEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,sEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QAEf,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,gHACE;QAFJ,4DACE;QAiBJ,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;;QApHsD,0DAAsC;QAAtC,qHAAsC;QAK9D,0DAA4B;QAA5B,yFAA4B;QAKH,0DAA2B;QAA3B,sFAA2B;QAM5B,0DAA2B;QAA3B,sFAA2B;QAMvB,0DAA2B;QAA3B,sFAA2B;QAW/E,0DAAwH;QAAxH,kPAAwH;QAElH,0DAA8D;QAA9D,6LAA8D;QAQpE,0DAAoH;QAApH,8OAAoH;QAE9G,0DAA4D;QAA5D,yLAA4D;QAG5D,0DAA6D;QAA7D,0LAA6D;QAK9C,0DAAkC;QAAlC,kGAAkC;QASvD,0DAAgH;QAAhH,0OAAgH;QAG1G,0DAA0D;QAA1D,qLAA0D;QAG1D,0DAA2D;QAA3D,sLAA2D;QA4B/D,2DAA4B;QAA5B,kFAA4B;;6FDhF7B,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGO;AACP;;;;;;;;;IC6CnC,qEACE;IAAA,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,yEACE;IAAA,uDACF;IAAA,4DAAK;IACL,yEACE;IAAA,uDACF;IAAA,4DAAK;IACL,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,qEACE;IAAA,wDACF;IAAA,4DAAK;IACT,4DAAQ;;;IAdF,0DACF;IADE,6FACF;IAEE,0DACF;IADE,8FACF;IAEE,0DACF;IADE,+FACF;IAEE,0DACF;IADE,yFACF;IAEE,0DACF;IADE,+FACF;;ADrDH,MAAM,kBAAkB;IAM7B,YACU,OAAyB,EACzB,IAA6B,EAC7B,cAA8B;QAF9B,YAAO,GAAP,OAAO,CAAkB;QACzB,SAAI,GAAJ,IAAI,CAAyB;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QAPjC,YAAO,GAAY,KAAK,CAAC;QACzB,WAAM,GAAW,IAAI,oDAAM,EAAE,CAAC;QAC9B,YAAO,GAAW,IAAI,sDAAO,EAAE,CAAC;IAMpC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAID,kBAAkB;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CACtD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,qBAAqB;QACvB,CAAC,EAAC,GAAE,EAAE;YACJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC;QAClD,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,eAAe,CAAC,aAAqB;QAC1C,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,SAAS,CACzD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QAC3C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,OAAO;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;QAC/D,IAAI,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;QAC/C,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QACxC,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;IAC7C,CAAC;;oFArDU,kBAAkB;kGAAlB,kBAAkB;QCb/B,yEACE;QAAA,yEACE;QAAA,4EACE;QAAA,uEAAwE;QAAA,mFAAkB;QAAA,4DAAI;QAChG,4DAAS;QACT,4EACE;QADkD,0IAAS,4BAAwB,YAAY,CAAC,IAAC;QACjG,kEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAc;QAAA,4EAAgB;QAAA,4DAAI;QAClC,2EACE;QAAA,4EAAe;QAAA,iEACf;QAAA,yEAAY;QAAA,iEACZ;QAAA,iFAAoB;QAAA,iEACpB;QAAA,wEACF;QAAA,4DAAU;QACZ,4DAAM;QACN,0EACE;QAAA,wEAAc;QAAA,kEAAM;QAAA,4DAAI;QACxB,2EACE;QAAA,iEAAI;QAAA,iEACJ;QAAA,4EAAe;QAAA,iEACf;QAAA,2EAAc;QAAA,iEACd;QAAA,wEAAW;QAAA,iEACX;QAAA,gFAAmB;QAAA,iEACnB;QAAA,6EACF;QAAA,4DAAU;QACZ,4DAAM;QACR,4DAAM;QACN,0EAEE;QAAA,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAE5B,4DAAM;QACN,iEACA;QAAA,wEACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,uEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,sEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACf,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,gHACE;QAFJ,4DACE;QAiBJ,4DAAQ;QACV,4DAAO;QACT,4DAAM;;QAnBM,2DAA4B;QAA5B,kFAA4B;;6FDtC3B,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAA+D;AAEpB;;;AAKpC,MAAM,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,IAAI,GAAG,qEAAW,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,qEAAW,CAAC,YAAY,CAAC;IAC/C,CAAC;IAGD,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC;IAC9E,CAAC;IACD,IAAI,CAAC,OAAgB;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,UAAU,EAAE,OAAO,CAAC,CAAC;IACtF,CAAC;IACD,UAAU,CAAC,QAAgB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,WAAW,GAAG,QAAQ,CAAC,CAAC;IACxF,CAAC;;4EAlBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACU;AAEZ;AACkB;;;AAMpD,MAAM,uBAAuB;IAMlC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,IAAI,GAAG,wEAAW,CAAC,IAAI,CAAC;IAC/B,CAAC;IAGD,OAAO,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,SAAS,CAAC,KAAU;QAClB,YAAY,CAAE,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAGA,cAAc;QACb,MAAM,SAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,oDAAM,CAAC;QACxB,aAAa;QACd,MAAM,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAE9B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,gBAAgB;QACd,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAE;IAChB,CAAC;IAED,UAAU;QACR,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;;8FAjDU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIgB;;;AAKpD,MAAM,aAAa;IAGxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,IAAI,GAAG,wEAAW,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,wEAAW,CAAC,YAAY,CAAC;IAC/C,CAAC;IAGD,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,CAAC;IAChF,CAAC;IACD,IAAI,CAAC,MAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC;IACnF,CAAC;IACD,SAAS,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,EAAE,CAAC,CAAC;IAChF,CAAC;;0EAjBU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEgB;;;AAKpD,MAAM,gBAAgB;IAK3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,IAAI,GAAG,wEAAW,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,wEAAW,CAAC,YAAY,CAAC;IAC/C,CAAC;IAED,qBAAqB,CAAC,aAAoB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,aAAa,CAAC,CAAC;IACnG,CAAC;IACD,IAAI,CAAC,SAAoB;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,YAAY,EAAE,SAAS,CAAC,CAAC;IAC5F,CAAC;IACD,YAAY,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,EAAE,CAAC,CAAC;IACtF,CAAC;;gFAlBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA,IAAY,YAMT;AANH,WAAY,YAAY;IACpB,4DAA0C;IAC1C,oEAAkD;IAClD,kDAAgC;IAChC,kDAAgC;IAChC,sDAAqC;AACvC,CAAC,EANS,YAAY,KAAZ,YAAY,QAMrB;AAMD,IAAY,aAIX;AAJD,WAAY,aAAa;IACvB,uDAAO;IACP,qDAAM;IACN,mDAAK;AACP,CAAC,EAJW,aAAa,KAAb,aAAa,QAIxB;;;;;;;;;;;;;ACjBH;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,IAAI,EAAC,uBAAuB;IAC5B,IAAI,EAAC,6BAA6B;IAClC,YAAY,EAAC,SAAS;CACvB,CAAC;AAIF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACpBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrokerService } from './../broker/broker.service';\nimport { Client } from './../class/client';\nimport { AuthentificationService } from './../services/authentification.service';\nimport { AccountService } from './../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Account } from '../class/account';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css'],\n})\nexport class AccountComponent implements OnInit {\n  public accountForm: FormGroup;\n  public client: Client = new Client();\n  public account: Account = new Account();\n  public accountList: Account[];\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AuthentificationService,\n    private accountService: AccountService\n  ) {}\n\n  ngOnInit(): void {\n    this.onGetInfoClient() ;\n    this.onGetAll();\n    this.accountForm = this.fb.group({\n      accountNumber: [\n        '',\n        [\n          Validators.required,\n          Validators.maxLength(10),\n        ],\n      ],\n    });\n\n  }\n\n  onGetInfoClient() {\n    this.client = this.auth.loadInfoClient();\n  }\n\n  onGetAll() {\n    this.accountService.getAllAccount().subscribe(\n      (data) => {\n        this.accountList = data;\n        console.log(data);\n      },\n      (err) => {\n        //traitement d'erreur\n      }\n    );\n  }\n\n  public saveData() {\n    console.log(this.accountForm.value)\n    if (this.accountForm?.invalid) return;\n    this.accountService.save(this.accountForm?.value).subscribe((data) => {\n      console.log(data);\n    },\n      (err) => {\n        //Traitement d'erreur\n      }\n    );\n  }\n\n  reloadCurrentPage() {\n    window.location.reload();\n   }\n}\n","<div class=\"container\">\r\n  <div class=\"row mt-4 mb-4\">\r\n    <h1 style=\"text-align: center;\">GESTION DES COMPTES</h1>\r\n  </div>\r\n  <div class=\"col\">\r\n    <div class=\"col-4 col-md-5 mb-3 mt-3\">\r\n      <form novalidate (ngSubmit)=\"saveData()\" [formGroup]=\"accountForm\">\r\n\r\n        <div class=\"form-group\">\r\n          <input placeholder=\"Numero de compte *\" type=\"text\" class=\"form-control\" id=\"accountNumber\"\r\n            formControlName=\"accountNumber\"\r\n            [ngClass]=\"{'is-invalid': accountForm.get('accountNumber').touched &&!accountForm.get('accountNumber').valid}\">\r\n\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"accountForm.get('accountNumber').errors?.required\">\r\n              Entrez le numero de compte du client\r\n            </span>\r\n            <span *ngIf=\"accountForm.get('accountNumber').errors?.maxlength\">\r\n              Maxnimum 10 charactères\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <button type=\"submit\" class=\"btn btn-red\" >Créer </button>\r\n      </form>\r\n\r\n\r\n    </div>\r\n    <div class=\"col-12 col-md-12\">\r\n      <span style=\"text-align: center; margin-top: 2%; margin-bottom: 2%;\">\r\n        <h6>Liste des Comptes</h6>\r\n      </span>\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Numero de compte</th>\r\n            <th>IBAN</th>\r\n            <th>RIB</th>\r\n            <th>ACCOUNT TYPE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let account of accountList\">\r\n            <td>\r\n              {{account.accountNumber}}\r\n            </td>\r\n            <td>\r\n              {{account.iban}}\r\n            </td>\r\n            <td>\r\n              - {{account.rib}}\r\n            </td>\r\n            <td>\r\n              {{account.accountType}}\r\n            </td>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n","import { PrintPageComponent } from './print-page/print-page.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountComponent } from './account/account.component';\nimport { OperationComponent } from './operation/operation.component';\nimport { ClientComponent } from './client/client.component';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'account', component: AccountComponent },\n  { path: 'operation', component: OperationComponent },\n  { path: 'client', component: ClientComponent },\n  { path: 'printPage', component: PrintPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthentificationService } from './services/authentification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bank-account-front';\n   \n  constructor(private authserv: AuthentificationService) {}\n \n  isAuth() {\n    return this.authserv.isAuthentication();\n  }\n}\n","<app-login *ngIf=\"!isAuth()\"></app-login>\n<app-menu *ngIf=\"isAuth()\"></app-menu>\n<router-outlet *ngIf=\"isAuth()\"></router-outlet>\n<router-outlet name=\"print\"></router-outlet>\n<app-footer *ngIf=\"isAuth()\"></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { AccountComponent } from './account/account.component';\nimport { OperationComponent } from './operation/operation.component';\nimport { ClientComponent } from './client/client.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ClientListComponent } from './client/client-list/client-list.component';\nimport { ClientItemComponent } from './client/client-list/client-item/client-item.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { PrintPageComponent } from './print-page/print-page.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    AccountComponent,\n    OperationComponent,\n    ClientComponent,\n    ClientListComponent,\n    ClientItemComponent,\n    FooterComponent,\n    LoginComponent,\n    HomeComponent,\n    PrintPageComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ActionEvent } from '../state/state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrokerService {\n\n  sourceEventSubject:Subject<ActionEvent>=new Subject<ActionEvent>();\n  sourceEventSubjectObservable=this.sourceEventSubject.asObservable();\n\n  //sourceEventSubject2:Subject<ActionEvent>=new Subject<ActionEvent>();\n  //sourceEventSubjectObservable2=this.sourceEventSubject.asObservable();\n\n  publishEvent(event:ActionEvent){\n    this.sourceEventSubject.next(event);\n  }\n}\n","export class Account {\r\n  idClient: number;\r\n  idAccount: number;\r\n  rib: string;\r\n  accountNumber: string;\r\n  iban: string;\r\n  balance: number;\r\n  accountType: string;\r\n  domiciliation: string;\r\n}\r\n","export class Client {\n    id: number;\n    lastName: string;\n    firstName: string;\n    birtDayDate: string;\n    phoneNumber: string;\n    emailAdress: string;\n    accountNumber: number;\n    clientId: number;\n    status:boolean;\n    role:string;\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Client } from 'src/app/class/client';\n\n@Component({\n  selector: 'app-client-item',\n  templateUrl: './client-item.component.html',\n  styleUrls: ['./client-item.component.css']\n})\nexport class ClientItemComponent implements OnInit {\n\n  @Input() client: Client | null = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onEdit(client: Client) {\n\n  }\n  onSelect(client: Client) {\n\n  }\n}\n","<tr *ngIf=\"client\">\n    <td>{{client.id}}</td>\n    <td>{{client.firstName}}</td>\n    <td>{{client.lastName}}</td>\n    <td>{{client.birtDayDate}}</td>\n    <td>{{client.accountNumber}}</td>\n    <td>{{client.clientId}}</td>\n    <td>\n      <button (click)=\"onSelect(client)\" [ngClass]=\"client.status?'btn-success':'btn-danger'\" class=\"btn btn-sm\">\n        <span *ngIf=\"client.status\">Anactif</span>\n        <span *ngIf=\"!client.status\">Actif</span>\n      </button>\n    </td>\n    <td>\n      <button class=\"btn btn-danger\" (click)=\"onEdit(client)\">\n        <span class=\"fa fa-edit\">Edit</span>\n      </button>\n    </td>\n  </tr>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppDataState, DataStateEnum } from 'src/app/state/state';\nimport { Client } from 'src/app/class/client';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent implements OnInit {\n  @Input() clientsInput$:Observable<AppDataState<Client[]>>;\n  readonly DataStateEnum=DataStateEnum;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"List \" + this.clientsInput$ );\n  }\n\n}\n","\n    <ng-container *ngIf=\"(clientsInput$ | async) as result\" [ngSwitch]=\"result.dataState\" >\n      <ng-container *ngSwitchCase=\"DataStateEnum.LOADING\">\n        Loading .....\n      </ng-container>\n      <ng-container *ngSwitchCase=\"DataStateEnum.ERROR\">\n        <div class=\"alert-danger\">\n          {{result.errorMessage}}\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"DataStateEnum.LOADED\">\n        <table class=\"table\">\n          <tr>\n            <th>ID</th><th>FirstName</th><th>LastName</th><th>Date Naissance</th><th>Numéro compte</th><th>Client ID</th><th>Status</th><th>Action</th>\n          </tr>\n          <app-client-item\n            [client]=\"p\"\n            *ngFor=\"let p of result.data\" style=\"display: contents\">\n          </app-client-item>\n        </table>\n      </ng-container>\n    </ng-container>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validator, Validators } from '@angular/forms';\nimport { Client } from '../class/client';\nimport { ClientService } from '../services/client.service';\nimport { BrokerService } from '../broker/broker.service';\nimport { ActionsTypes, AppDataState, DataStateEnum, ActionEvent } from '../state/state';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent implements OnInit {\n\n  public clientForm: FormGroup;\n  public client: Client;\n  clientIn$:Observable<AppDataState<Client[]>> |null=null;\n\n\n  constructor(private fb: FormBuilder, private service: ClientService, private broker: BrokerService) { }\n\n  ngOnInit(): void {\n    this.onGetAllClients();\n    this.broker.publishEvent({type: ActionsTypes.GET_ALL_CLIENTS});\n    this.broker.sourceEventSubjectObservable.subscribe((actionEvent: ActionEvent) => {\n      this.onActionEvent(actionEvent);\n    });\n\n    this.clientForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\n      lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\n      emailAdress: ['', [Validators.required, Validators.email]],\n      birtDayDate: '',\n      phoneNumber: '',\n    });\n\n\n  }\n  onActionEvent($event: ActionEvent) {\n    switch ($event.type) {\n      case ActionsTypes.GET_ALL_CLIENTS: this.onGetAllClients();break;\n    }\n  }\n  onGetAllClients() {\n    this.clientIn$=this.service.getAllClient().pipe(\n      map(data=>{\n        return ({dataState:DataStateEnum.LOADED,data:data})\n      }),\n      startWith({dataState:DataStateEnum.LOADING}),\n      catchError(err=>of({dataState:DataStateEnum.ERROR, errorMessage:err.message}))\n    );\n  }\n\n  public saveData() {\n    if (this.clientForm?.invalid) return;\n    this.service.save(this.clientForm?.value)\n      .subscribe(data => {\n        this.onGetAllClients;\n        this.broker.publishEvent({ type: ActionsTypes.ADD_CLIENT });\n      });\n      this.onGetAllClients;\n  }\n\n  reloadCurrentPage() {\n    window.location.reload();\n   }\n}\n\n\n","<div class=\"container\">\n  <div class=\"row mt-4 mb-4\">\n    <h1 style=\"text-align: center;\">CLIENT</h1>\n  </div>\n    <div class=\"col\">\n        <div class=\"col-4 col-md-5 mb-3 mt-3\">\n            <form novalidate (ngSubmit)=\"saveData()\" [formGroup]=\"clientForm\">\n\n                <div class=\"form-group\">\n                    <input placeholder=\"Prénom *\" type=\"text\" class=\"form-control\" id=\"firstname\"\n                        formControlName=\"firstName\" [ngClass]=\"{'is-invalid': clientForm.get('firstName').touched &&!clientForm.get('firstName').valid}\">\n\n                    <div class=\"invalid-feedback\">\n                        <span *ngIf=\"clientForm.get('firstName').errors?.required\">\n                            Entrez votre nom\n                        </span>\n                        <span *ngIf=\"clientForm.get('firstName').errors?.maxlength\">\n                            Maxnimum 10 charactères\n                        </span>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"Nom * \" class=\"form-control\" id=\"lastname\" formControlName=\"lastName\"\n                        [ngClass]=\"{'is-invalid': clientForm.get('lastName').touched && !clientForm.get('lastName').valid }\">\n\n                    <div class=\"invalid-feedback\">\n                        <span *ngIf=\"clientForm.get('lastName').errors?.required\">\n                            Entrez votre nom\n                        </span>\n                        <span *ngIf=\"clientForm.get('lastName').errors?.minlength\">\n                            Minimum 2 charactères\n                        </span>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email *\" class=\"form-control\" id=\"email\"\n                        formControlName=\"emailAdress\" [ngClass]=\"{'is-invalid': clientForm.get('emailAdress').touched && !clientForm.get('emailAdress').valid}\">\n\n                    <div class=\"invalid-feedback\">\n                        <span *ngIf=\"clientForm.get('emailAdress').errors?.required\">\n                            Entrez  l'e-mail du client\n                        </span>\n                        <span *ngIf=\"clientForm.get('emailAdress').errors?.email\">\n                            L'e-mail client n'est pas valide\n                        </span>\n                    </div>\n                </div>\n\n\n                <div class=\"form-group\">\n                    <input type=\"email\" placeholder=\"Téléphone *\" class=\"form-control\" id=\"email\"\n                        formControlName=\"phoneNumber\" [ngClass]=\"{'is-invalid': clientForm.get('phoneNumber').touched && !clientForm.get('phoneNumber').valid}\">\n                    <div class=\"invalid-feedback\">\n                        <span *ngIf=\"clientForm.get('phoneNumber').errors?.required\">\n                            Veuillez entrer le numéro de télephone du client.\n                        </span>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"date\" placeholder=\"Date Naissance\" class=\"form-control\" id=\"date\"\n                        formControlName=\"birtDayDate\">\n                </div>\n\n\n                <button type=\"submit\" class=\"btn btn-red\" (click)=\"reloadCurrentPage()\" >Enregistrer</button>\n            </form>\n\n\n        </div>\n        <div class=\"col-12 col-md-12\">\n            <app-client-list [clientsInput$]=\"clientIn$\"></app-client-list>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n      <div class=\"footer\">\n        <div class=\"container\">\n          <div class=\"row\">\n          </div>\n        </div>\n      </div>\n      <footer class=\"footer\">\n        <div class=\"container\">\n          <div class=\"row align-items-center flex-row-reverse\">\n            <div class=\"col-auto ml-lg-auto\">\n              <div class=\"row align-items-center\">\n                <div class=\"col-auto\">\n                  <ul class=\"list-inline list-inline-dots mb-0\">\n                    <li class=\"list-inline-item\"><a href=\"#\">Documentation</a></li>\n                    <li class=\"list-inline-item\"><a href=\"#\">FAQ</a></li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-12 col-lg-auto mt-3 mt-lg-0 text-center\">\n              Copyright © 2021 <a href=\"..\"> Bank Account</a> <a href=\"#\" target=\"_blank\"></a> All rights reserved.\n            </div>\n          </div>\n        </div>\n      </footer>\n","import { AccountService } from './../services/account.service';\nimport { AuthentificationService } from './../services/authentification.service';\nimport { Account } from './../class/account';\nimport { Client } from './../class/client';\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public client:Client = new Client();\n  public account: Account = new Account();\n\n  constructor(private auth:AuthentificationService, private accountService:AccountService) { }\n\n  ngOnInit(): void {\n    this.onGetAccountClient();\n  }\n\n\n  onGetAccountClient() {\n    this.client = this.auth.loadInfoClient();\n    this.accountService.getAccount(this.client.id).subscribe(\n      (data) => {\n        this.account = data;\n      },\n      (err) => {\n        //traitement d'erreur\n      }\n    );\n  }\n\n  onprintInfoCompte(cmpName) {\n\n    let printContents = document.getElementById(cmpName).innerHTML;\n    let originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    document.body.innerHTML = originalContents;\n}\n\n}\n","<button type=\"submit\" class=\"btn btn-red ml-2 mb-4 mt-4\" (click)=\"onprintInfoCompte('infoAccount')\">\n  Print\n</button>\n\n<div class=\"container mb-5 mt-5\" id=\"infoAccount\">\n    <div class=\"row mb-3\">\n        <div class=\"col-12\">\n            <div class=\"h-5 bg-gray-lighter rounded\" style=\"text-align: center;\">INFORMATION COMPTE CLIENT</div>\n        </div>\n    </div>\n    <div class=\"row mb-3\">\n        <div class=\"col-6\">\n            <div class=\"h-5 bg-gray-lighter rounded\"> NOM : {{client.lastName}}</div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"h-5 bg-gray-lightest rounded\">PRENOM : {{client.firstName}}</div>\n        </div>\n    </div>\n    <div class=\"row mb-3\">\n        <div class=\"col-4\">\n            <div class=\"h-5 bg-gray-lighter rounded\">RIB :  {{account.rib}}</div>\n        </div>\n        <div class=\"col-4\">\n            <div class=\"h-5 bg-gray-lightest rounded\">IBAN : {{account.iban}}</div>\n        </div>\n        <div class=\"col-4\">\n            <div class=\"h-5 bg-gray-lighter rounded\">NUMERO DE COMPTE : {{account.accountNumber}}</div>\n        </div>\n    </div>\n    <div class=\"row mb-3\">\n        <div class=\"col-3\">\n            <div class=\"h-5 bg-gray-lighter rounded\">CLIENT ID : {{client.clientId}}</div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"h-5 bg-gray-lightest rounded\">TELEPHONE : {{client.phoneNumber}}</div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"h-5 bg-gray-lighter rounded\">EMAIL : {{client.emailAdress}}</div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"h-5 bg-gray-lightest rounded\">DATE NAISSANCE : {{client.birtDayDate}}</div>\n        </div>\n    </div>\n</div>\n","import { AccountService } from './../services/account.service';\nimport { Account } from './../class/account';\nimport { BrokerService } from './../broker/broker.service';\nimport { ClientService } from './../services/client.service';\nimport { Client } from './../class/client';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthentificationService } from '../services/authentification.service';\nimport { Router } from '@angular/router';\nimport { ActionsTypes } from '../state/state';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  public isAuth: boolean = true;\n  private account: Account = new Account();\n\n  constructor(\n    private authServ: AuthentificationService,\n    private router: Router,\n    private fb: FormBuilder,\n    private service: ClientService,\n    private accountService: AccountService,\n    private broker :BrokerService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      accountNumber: ['', [Validators.required, Validators.maxLength(10)]],\n      clientId: ['', [Validators.required, Validators.maxLength(10)]],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm?.invalid) return;\n    this.authServ.onLogin(this.loginForm?.value).subscribe(\n      (resp) => {\n        this.authServ.saveToken(resp.body);\n        this.isAuth = false;\n        this.router.navigate(['/operation']);\n      },\n      (err) => {\n        //Traitement des erreurs\n        //Acitve war message\n      },\n      () => {\n        //Recupération des infos du compte si l'authentification es ok\n      //  this.onGetAccountClient();\n      }\n    );\n  }\n\n}\n","<body class=\"\" *ngIf=\"isAuth\">\n    <div class=\"page\">\n        <div class=\"page-single\">\n            <div class=\"container\">\n                <div class=\"row\">\n\n                    <div class=\"col col-login mx-auto\">\n\n                        <div class=\"text-center \">\n                            <img src=\"assets/logo/sg.jpg\"  alt=\"SG\">\n                        </div>\n\n                        <form  (ngSubmit)=\"onLogin()\" [formGroup]=\"loginForm\">\n\n                            <div class=\"card-body p-6\">\n                                <div class=\"form-group\">\n                                    <label class=\"form-label\">Account Number</label>\n                                    <input name=\"accountNumber\" type=\"text\" class=\"form-control\" id=\"accountNumber\"\n                                    autocomplete=\"false\" placeholder=\"Account Numbe\" formControlName=\"accountNumber\"\n                                    [ngClass]=\"{'is-invalid':loginForm.get('accountNumber').touched && !loginForm.get('accountNumber').valid}\">\n                                    <div class=\"invalid-feedback\">\n                                      <span *ngIf=\"loginForm.get('accountNumber').errors?.required\">\n                                          Entrez votre numéro de compte\n                                      </span>\n                                      <span *ngIf=\"loginForm.get('accountNumber').errors?.maxlength\">\n                                          Maxnimum 10 charactères\n                                      </span>\n                                  </div>\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label class=\"form-label\"> Client ID </label>\n                                    <input name=\"clientId\" type=\"password\" class=\"form-control\" id=\"clientId\" autocomplete=\"false\"\n                                    placeholder=\"Client ID\" formControlName=\"clientId\"\n                                    [ngClass]=\"{'is-invalid':loginForm.get('clientId').touched && !loginForm.get('clientId').valid}\">\n\n                                    <div class=\"invalid-feedback\">\n                                      <span *ngIf=\"loginForm.get('clientId').errors?.required\">\n                                          Entrez votre Id client\n                                      </span>\n                                      <span *ngIf=\"loginForm.get('clientId').errors?.maxlength\">\n                                          Maxnimum 10 charactères\n                                      </span>\n                                  </div>\n\n                                </div>\n\n                                <div class=\"form-footer\">\n                                    <button type=\"submit\" class=\"btn btn-red btn-block\">Sign in</button>\n                                </div>\n\n\n                            </div>\n                        </form>\n\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n\n","import { AuthentificationService } from './../services/authentification.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Client } from '../class/client';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  public client: Client;\n\n  constructor(private auth:AuthentificationService) { }\n\n  ngOnInit(): void {\n    this.client=this.auth.loadInfoClient();\n  }\n\n  public deconexion(){\n    this.auth.deconexion();\n  }\n\n}\n","<div class=\"header py-4\">\n  <div class=\"container\">\n    <div class=\"d-flex\">\n      <a class=\"header-brand\" routerLink=\"/home\">\n        <img src=\"assets/logo/sg.jpg\" alt=\"SG\">\n      </a>\n      <div class=\"d-flex order-lg-2 ml-auto\">\n        <div class=\"dropdown\">\n          <a href=\"#\" class=\"nav-link pr-0 leading-none\" data-toggle=\"dropdown\">\n            <span class=\"ml-2 d-none d-lg-block\">\n              <span class=\"text-default\" style=\"color: black; font-weight: bold;\"> {{client.firstName}} | {{client.lastName}}</span>\n              <small class=\"text-muted d-block mt-1\">Account Number : {{client.accountNumber}}</small>\n            </span>\n          </a>\n          <a href=\"#\" (click)=\"deconexion()\" title=\"Deconexion\" >\n            <img src=\"assets/images/logout/gnome_session_logout.png\"  alt=\"Deconexion\">\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"header collapse d-lg-flex p-0\" id=\"headerMenuCollapse\">\n  <div class=\"container\">\n    <div class=\"row align-items-center\">\n      <div class=\"col-lg-3 ml-auto\">\n        <form class=\"input-icon my-3 my-lg-0\">\n          <input type=\"search\" class=\"form-control header-search\" placeholder=\"Search&hellip;\" tabindex=\"1\">\n          <div class=\"input-icon-addon\">\n            <i class=\"fe fe-search\"></i>\n          </div>\n        </form>\n      </div>\n      <div class=\"col-lg order-lg-first\">\n        <ul class=\"nav nav-tabs border-0 flex-column flex-lg-row\">\n          <li class=\"nav-item\">\n            <a routerLink='/home' class=\"nav-link\" style=\"color: red;\"><i class=\"fe fe-home\"></i> Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink='/operation' data-toggle=\"dropdown\">\n              <i class=\"fe fe-box\"></i> Opérations\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink='/client'>\n              <i class=\"fe fe-box\"></i> Clients\n            </a>\n          </li>\n        <!--   <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink='/client'>\n              <i class=\"fe fe-box\"></i> Beneficiare\n            </a>\n          </li> -->\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink='/account'>\n              <i class=\"fe fe-box\"></i> Account\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import { AccountService } from './../services/account.service';\nimport { Client } from 'src/app/class/client';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { OperationService } from './../services/operation.service';\nimport { AuthentificationService } from './../services/authentification.service';\nimport { Expression } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { BrokerService } from '../broker/broker.service';\nimport { ActionsTypes } from '../state/state';\nimport { Operation } from '../class/operation';\nimport { Router } from '@angular/router';\nimport { Account } from '../class/account';\n\n@Component({\n  selector: 'app-operation',\n  templateUrl: './operation.component.html',\n  styleUrls: ['./operation.component.css'],\n})\nexport class OperationComponent implements OnInit {\n  public opertationForm: FormGroup;\n  public client: Client = new Client();\n  public operation: any;\n  public account: Account = new Account();\n  displayErrorMessage: boolean = false;\n  typeOperation: string = 'CREDIT';\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AuthentificationService,\n    private service: OperationService,\n    private broker: BrokerService,\n    private router: Router,\n    private accountService: AccountService\n  ) {}\n\n  ngOnInit(): void {\n\n    this.onGetAccountClient();\n\n    this.opertationForm = this.fb.group({\n      type: ['', [Validators.required]],\n      amountOperation: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(10),\n        ],\n      ],\n      accountNumber: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(10),\n        ],\n      ],\n      description: ['', [Validators.required, Validators.maxLength(40)]],\n      beneficiary: '',\n    });\n  }\n\n  public saveData() {\n    if (this.opertationForm?.invalid) return;\n    this.service.save(this.opertationForm?.value).subscribe(\n      (data) => {\n        this.broker.publishEvent({ type: ActionsTypes.ADD_CLIENT });\n      },\n      (err) => {\n        console.log(' AuthentificationService KO   ' + err.message);\n      }\n    );\n  }\n\n  onGetAccountClient() {\n    this.client = this.auth.loadInfoClient();\n    this.accountService.getAccount(this.client.id).subscribe(\n      (data) => {\n        this.account = data;\n      },\n      (err) => {\n        //traitement d'erreur\n      },\n      () => {\n        this.getAllOperationClient(this.account.accountNumber);\n      }\n    );\n  }\n\n  public getAllOperationClient(accountNumber) {\n    this.service.getAllOperationClient(accountNumber).subscribe(\n      (data) => {\n        this.operation = data;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  reloadCurrentPage() {\n    window.location.reload();\n  }\n}\n","<div class=\"container\">\n  <div class=\"row mt-4 mb-4\">\n    <div class=\"row \" style=\"color: red;font-weight: bold;\">Votre solde est :{{account.balance}} €</div>\n    <h1 style=\"text-align: center;\">OPERATIONS</h1>\n  </div>\n  <div class=\"col\">\n    <div class=\"col-sm-5\">\n      <form (ngSubmit)=\"saveData()\" [formGroup]=\"opertationForm\">\n        <div class=\"form-group\">\n          <div class=\"form-label\">Type Opération</div>\n          <div class=\"custom-switches-stacked\">\n            <label class=\"custom-switch\">\n              <input type=\"radio\" name=\"type\" value=\"CREDIT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\n                class=\"custom-switch-input\" checked>\n              <span class=\"custom-switch-indicator\"></span>\n              <span class=\"custom-switch-description\">Dépot</span>\n            </label>\n            <label class=\"custom-switch\">\n              <input type=\"radio\" name=\"type\" value=\"DEBIT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\n                class=\"custom-switch-input\">\n              <span class=\"custom-switch-indicator\"></span>\n              <span class=\"custom-switch-description\">Retrait</span>\n            </label>\n            <label class=\"custom-switch\">\n              <input type=\"radio\" name=\"type\" value=\"TRANSFERT\" [(ngModel)]=\"typeOperation\" formControlName=\"type\"\n                class=\"custom-switch-input\">\n              <span class=\"custom-switch-indicator\"></span>\n              <span class=\"custom-switch-description\">Virement</span>\n            </label>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"amountOperation\">Montant:</label>\n          <input type=\"number\" class=\"form-control\" id=\"amountOperation\" name=\"amountOperation\"\n            formControlName=\"amountOperation\"\n            [ngClass]=\"{'is-invalid':opertationForm.get('amountOperation').touched && !opertationForm.get('amountOperation').valid}\">\n          <div class=\"invalid-feedback\">\n            <span *ngIf=\"opertationForm.get('amountOperation').errors?.required\">\n              Entrez le montant\n            </span>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"accountNumber\">Numéro Compte à Débiter:</label>\n          <input type=\"text\" class=\"form-control\" id=\"pwd\" name=\"aaccountNumber\" formControlName=\"accountNumber\"\n            [ngClass]=\"{'is-invalid':opertationForm.get('accountNumber').touched && !opertationForm.get('accountNumber').valid}\">\n          <div class=\"invalid-feedback\">\n            <span *ngIf=\"opertationForm.get('accountNumber').errors?.required\">\n              Entrez votre numéro de compte\n            </span>\n            <span *ngIf=\"opertationForm.get('accountNumber').errors?.maxlength\">\n              Maxnimum 10 charactères\n            </span>\n          </div>\n        </div>\n         <div class=\"form-group\" *ngIf=\"typeOperation=='TRANSFERT'\">\n          <label for=\"account-cred\">Numéro Compte à Créditer:</label>\n          <input type=\"text\" placeholder=\"Pas opérationnel\" class=\"form-control\" id=\"pwd\" name=\"account-cred\" formControlName=\"beneficiary\">\n        </div>\n\n\n        <div>\n          <label for=\"description\">Description</label>\n          <input type=\"text\" class=\"form-control\" id=\"description\" name=\"description\" formControlName=\"description\"\n            [ngClass]=\"{'is-invalid':opertationForm.get('description').touched && !opertationForm.get('description').valid}\">\n\n          <div class=\"invalid-feedback\">\n            <span *ngIf=\"opertationForm.get('description').errors?.required\">\n              Entrez une description de l'opération\n            </span>\n            <span *ngIf=\"opertationForm.get('description').errors?.maxlength\">\n              Maxnimum 40 charactères\n            </span>\n          </div>\n        </div>\n        <br>\n        <button type=\"submit\" class=\"btn btn-red\" (click)=\"reloadCurrentPage()\"   >Valider</button>\n        <button type=\"submit\" class=\"btn btn-red ml-2\">\n          <a routerLink=\"/printPage\" style=\"color: white;text-decoration: none;\"> Print </a>\n        </button>\n      </form>\n    </div>\n    <div>\n      <span style=\"text-align: center; margin-top: 2%; margin-bottom: 2%;\">\n        <h6>Liste Opérations</h6>\n      </span>\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Opération</th>\n            <th>Crédit</th>\n            <th>Débit</th>\n            <th>Balance</th>\n            <th>Date</th>\n\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let op of operation\">\n            <td>\n              {{op.description}}\n            </td>\n            <td style=\"color:green; font-weight: bold;\">\n              {{op.creditAmount}}\n            </td>\n            <td style=\"color: red; font-weight: bold;\">\n              - {{op.debitAmount}}\n            </td>\n            <td>\n              {{op.balance}}\n            </td>\n            <td>\n              {{op.dateOperation}}\n            </td>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { AccountService } from './../services/account.service';\nimport { AuthentificationService } from './../services/authentification.service';\nimport { Client } from './../class/client';\n\nimport { OperationService } from './../services/operation.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Account } from '../class/account';\n\n@Component({\n  selector: 'app-print-page',\n  templateUrl: './print-page.component.html',\n  styleUrls: ['./print-page.component.css'],\n})\nexport class PrintPageComponent implements OnInit {\n  public operation: any;\n  public display: boolean = false;\n  public client: Client = new Client();\n  public account:Account = new Account();\n\n  constructor(\n    private service: OperationService,\n    private auth: AuthentificationService,\n    private accountService: AccountService\n  ) {}\n\n  ngOnInit(): void {\n    this.onGetAccountClient();\n  }\n\n\n\n  onGetAccountClient() {\n    this.client = this.auth.loadInfoClient();\n    this.accountService.getAccount(this.client.id).subscribe(\n      (data) => {\n        this.account = data;\n      },\n      (err) => {\n        //traitement d'erreur\n      },()=>{\n        this.getAllOperation(this.account.accountNumber);\n        console.log(this.account.accountNumber + \"Accc\")\n      }\n    );\n  }\n\n  public getAllOperation(accountNumber: string) {\n    this.service.getAllOperationClient(accountNumber).subscribe(\n      (data) => {\n        this.operation = data;\n        console.log(data + \"data\")\n        console.log(this.operation + \"Operation\")\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  onprintHistoriqueCompte(cmpName) {\n    this.display = false;\n    let printContents = document.getElementById(cmpName).innerHTML;\n    let originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    document.body.innerHTML = originalContents;\n  }\n}\n","<div class=\"row mb-4 mt-4\" >\n  <div class=\"col-6\">\n    <button type=\"submit\" class=\"btn btn-red mb-4\">\n      <a routerLink=\"/operation\" style=\"color: white;text-decoration: none;\"> Nouvelle Opération</a>\n    </button>\n    <button type=\"submit\" class=\"btn btn-red ml-2 mb-4\" (click)=\"onprintHistoriqueCompte('historique')\">\n      Print\n    </button>\n  </div>\n</div>\n<div class=\"container\" id=\"historique\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <p class=\"h3\">SOCIETE GENERALE</p>\n      <address>\n        Street Address:<br>\n        State, City:<br>\n        Region, Postal Code:<br>\n        ltd@sg.com\n      </address>\n    </div>\n    <div class=\"col-6 text-end\">\n      <p class=\"h3\">Client</p>\n      <address>\n        Name<br>\n        Account Number <br>\n        Street Address<br>\n        State, City<br>\n        Region, Postal Code<br>\n        ctr@example.com\n      </address>\n    </div>\n  </div>\n  <div style=\"text-align: center;\">\n\n    <h3>HISTORIQUE COMPTE</h3>\n\n  </div>\n  <br />\n  <form>\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Description</th>\n          <th>Crédit</th>\n          <th>Débit</th>\n          <th>Balance</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let op of operation\">\n          <td>\n            {{op.description}}\n          </td>\n          <td style=\"color:green; font-weight: bold;\">\n            {{op.creditAmount}}\n          </td>\n          <td style=\"color: red; font-weight: bold;\">\n            - {{op.debitAmount}}\n          </td>\n          <td>\n            {{op.balance}}\n          </td>\n          <td>\n            {{op.dateOperation}}\n          </td>\n      </tbody>\n    </table>\n  </form>\n</div>\n","import { Observable } from 'rxjs';\nimport { Account } from './../class/account';\nimport { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  host: string;\n  context_path: string;\n  constructor(private http: HttpClient) {\n    this.host = environment.host;\n    this.context_path = environment.context_path;\n  }\n\n\n  getAllAccount(): Observable<Account[]> {\n    return this.http.get<Account[]>(this.host + this.context_path + \"/account\");\n  }\n  save(account: Account): Observable<Account> {\n    return this.http.post<Account>(this.host + this.context_path + \"/account\", account);\n  }\n  getAccount(idClient: number): Observable<Account> {\n    return this.http.get<Account>(this.host + this.context_path + \"/account/\" + idClient);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from \"@auth0/angular-jwt\"\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from '../class/client';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthentificationService {\n\n jwt: string;\n client: Client;\n host:string;\n\n  constructor(private http: HttpClient) {\n    this.host = environment.auth;\n  }\n\n\n  onLogin(data) {\n   return this.http.post(this.host, data, { observe: 'response' });\n  }\n\n  saveToken(token: any) {\n    localStorage .setItem('token', token);\n  }\n\n\n   loadInfoClient(): Client {\n    const jwtHelper = new JwtHelperService();\n    this.client = new Client;\n     // decode JWT\n    const obJwt = jwtHelper.decodeToken(localStorage.getItem('token'));\n\n    this.client.id = obJwt.id;\n    this.client.accountNumber = obJwt.accountNumber;\n    this.client.firstName = obJwt.firstName;\n    this.client.lastName = obJwt.lastName;\n    this.client.phoneNumber = obJwt.phoneNumber;\n    this.client.clientId = obJwt.clientId;\n    this.client.emailAdress = obJwt.emailAdress;\n    this.client.birtDayDate = obJwt.birtDayDate;\n    this.client.clientId = obJwt.clientId;\n    this.client.role = obJwt.role;\n\n    return this.client;\n  }\n\n  isAuthentication() {\n    if (localStorage.getItem('token') != null) {\n      return true;\n    }\n    return false ;\n  }\n\n  deconexion() {\n    localStorage.removeItem('token');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from '../class/client';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  host: string;\n  context_path: string;\n  constructor(private http: HttpClient) {\n    this.host = environment.host;\n    this.context_path = environment.context_path;\n  }\n\n\n  getAllClient(): Observable<Client[]> {\n    return this.http.get<Client[]>(this.host + this.context_path + \"/client/all\");\n  }\n  save(client: Client): Observable<Client> {\n    return this.http.post<Client>(this.host + this.context_path + \"/client\", client);\n  }\n  getClient(id: number): Observable<Client> {\n    return this.http.get<Client>(this.host + this.context_path + \"/client/\" + id);\n  }\n\n}\n","import { Account } from './../class/account';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Operation } from '../class/operation';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationService {\n\n  host: string;\n  context_path: string;\n\n  constructor(private http: HttpClient) {\n    this.host = environment.host;\n    this.context_path = environment.context_path;\n  }\n\n  getAllOperationClient(accountNumber:string): Observable<Operation[]> {\n    return this.http.get<Operation[]>(this.host + this.context_path + \"/operation/\" + accountNumber);\n  }\n  save(operation: Operation): Observable<Operation> {\n    return this.http.post<Operation>(this.host + this.context_path + \"/operation\", operation);\n  }\n  getOperation(id: number): Observable<Operation> {\n    return this.http.get<Operation>(this.host + this.context_path + \"/operation/\" + id);\n  }\n}\n","\nexport enum ActionsTypes{\n    GET_ALL_CLIENTS=\"[Client] Get All clients\",\n    GET_SELECTED_CLIENT=\"[Client] Get Selected client\",\n    NEW_CLIENT=\"[Client] New client\",\n    ADD_CLIENT=\"[Client] New client\",\n    INFO_ACCOUNT =\"[Account] New Account\"\n  }\n\n  export interface ActionEvent {\n    type:ActionsTypes,\n    payload?:any\n  }\n  export enum DataStateEnum {\n    LOADING,\n    LOADED,\n    ERROR\n  }\n\n  export interface AppDataState<T> {\n    dataState:DataStateEnum,\n    data?:T,\n    errorMessage?:string\n  }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  host:\"http://localhost:8080\",\n  auth:\"http://localhost:8080/login\",\n  context_path:\"/api/v1\",\n};\n\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}